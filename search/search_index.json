{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#hi-there","title":"Hi there \ud83d\udc4b","text":"<p>Welcome to the Pi-Apps documentation!</p> <p>Pi-Apps is an open-source app store for Raspberry Pi computers. It's written in 100% open-source bash scripts (including the GUI).</p> <p>If you find the project helpful, please consider leaving a star on our main repository!</p> <p>Links: - Main Repository: https://github.com/Botspot/pi-apps - Website: https://pi-apps.io - File Storage: https://github.com/Pi-Apps-Coders/files</p>"},{"location":"apps-list/","title":"Apps List","text":""},{"location":"apps-list/#appearance","title":"Appearance","text":""},{"location":"apps-list/#color-emoji-font","title":"Color Emoji font","text":"<p>ARM32/ARM64 - 5728 Users!</p> <pre><code>Installs two fonts to display all emojis in the Unicode Emoji 13.0.\nThis installs Noto Color Emoji font.\nTo test if it works, go to: https://tmh.conlang.org/emoji-language/all-emoji.html\n</code></pre>"},{"location":"apps-list/#conky","title":"Conky","text":"<p>https://github.com/Botspot/rpi_conky ARM32/ARM64 - 22637 Users!!</p> <pre><code>Monitors CPU, RAM, disk usage, and more.\nThis sits on your desktop, refreshing once a second, with pretty graphs showing you all you need to know.\nTo run: it should autostart on boot.\nTo run in a terminal: conky\n</code></pre>"},{"location":"apps-list/#conky-rings","title":"Conky Rings","text":"<p>https://github.com/Botspot/rpi_conky/tree/master/conky_rings - phoenixbyrd for the files ryanfortner for the scripts Botspot for coloring the theme ARM32/ARM64 - 4267 Users!</p> <pre><code>Animated gauges and graphs of your system, on your desktop.\nDisplays system uptime, core-specific CPU usage, CPU speed, CPU temperature, top 5 processes by CPU usage, storage usage for boot and root partitions, RAM usage, SWAP usage, top 5 processes by RAM usage, and describes the current Linux environment.\n</code></pre>"},{"location":"apps-list/#geany-dark-mode","title":"Geany Dark Mode","text":"<p>https://github.com/codebrainz/geany-themes - Botspot. Oh yeah. ARM32/ARM64 - 3644 Users!</p> <pre><code>Proper appearance theme for the Geany text editor.\nGeany's default color scheme looks horrible. Fortunately, this app will make it look good.\nBy default, this will apply the \"spyder-dark\" theme, (Botspot's favorite!), but it will also install many other themes to try out as well. To switch themes in Geany: View -&gt; Change Color Scheme.\n</code></pre>"},{"location":"apps-list/#lightpad","title":"Lightpad","text":"<p>https://github.com/libredeb/lightpad - Installation Script Made By RPICoder App Added To Pi-Apps by RPICoder ARM32/ARM64 - 6052 Users!</p> <pre><code>LightPad is a lightweight, simple and powerful application launcher.\nTo run: Menu -&gt; Accessories -&gt; Lightpad\nTo run in a terminal: com.github.libredeb.lightpad\n</code></pre>"},{"location":"apps-list/#mac-os-theme","title":"Mac OS Theme","text":"<p>https://github.com/techcoder20/MacOSBigSurThemeConverter - App Made By And Added To Pi-Apps By RPI Coder ARM32 ONLY - 10366 Users!!</p> <pre><code>Realistic Light/Dark Mac OS Big Sur appearance theme. Uses XFCE desktop.\nThis is a bash script that will make your plain Raspberry Pi OS LXDE desktop look similar to MacOSBigSur. You can switch between light and dark themes using the themeconverter.\nTo run: Menu -&gt; Accessories -&gt; ThemeConverter\nTo run in a terminal: themeconverter\nUninstalling this app should restore all of your original theme configuration. If something breaks due to this theme, please report it.\n</code></pre>"},{"location":"apps-list/#oomox-theme-designer","title":"Oomox Theme Designer","text":"<p>https://github.com/themix-project/oomox ARM32/ARM64 - 1960 Users!</p> <pre><code>A tool to customize icons, xrdb and GTK themes. \n\nGraphical application for generating different color variations of Oomox (Numix-based) and Materia (ex-Flat-Plat) themes (GTK2, GTK3, Cinnamon, GNOME, Openbox, Xfwm), Archdroid, Gnome-Color, Numix, Papirus and Suru++ icon themes. \n\nYou can apply your themes in lxappearance. \n\nTo run: Menu -&gt; Graphics -&gt; Oomox Theme Designer\nTo run in a terminal: oomox-gui\n</code></pre>"},{"location":"apps-list/#powerline-shell","title":"Powerline-Shell","text":"<p>https://github.com/techcoder20/RPI-PowerlineShell-Installer.git - Installation Script Created By RPICoder Added To Pi Apps By Botspot ARM32/ARM64 - 3137 Users!</p> <pre><code>A beautiful and useful prompt generator for Bash, ZSH, Fish, and tcsh:\n\n-Shows some important details about the git/svn/hg/fossil branch\n-Changes color if the last command exited with a failure code\n-If you're too deep into a directory tree, shortens the displayed path with an ellipsis\n-Shows the current Python virtualenv environment\n-It's easy to customize and extend.\n</code></pre>"},{"location":"apps-list/#ulauncher","title":"Ulauncher","text":"<p>https://ulauncher.io/ - RPiCoder on Discord recommended this. Botspot made the scripts. ARM32/ARM64 - 6255 Users!</p> <pre><code>All-in-one application launcher, Google search engine, calculator, file manager...\nThis is the best app launcher I've ever seen, though it can be a bit slow when searching. - Botspot\n</code></pre>"},{"location":"apps-list/#windows-screensavers","title":"Windows Screensavers","text":"<p>https://github.com/Botspot/Screensavers - Botspot ARM32 ONLY - 2119 Users!</p> <pre><code>14 Windows screensavers that run well on Raspberry Pi.\n\nOnce installed, you can launch Botspot's Screensavers GUI from:\nMenu -&gt; Preferences -&gt; Windows Screensavers.\nTo run in terminal: ~/Screensavers/gui\n\nPreview a screensaver, change its settings, and enable it to run after a specified duration of inactivity. The screensaver will not start while audio is playing.\n\nNote: If you don't have Wine installed, this app will install it for you.\n\nIn addition to the Windows Screensavers, Botspot's Screensaver GUI also allows convenient installation of GPU-accelerated Xscreensaver, preset to enable the best ones out of 230 screensavers.\n</code></pre>"},{"location":"apps-list/#xsnow","title":"XSnow","text":"<p>https://www.ratrabbit.nl/ratrabbit/xsnow/ - Thanks to Willem Vermin for developing this project. ARM32/ARM64 - 1075 Users</p> <pre><code>This turns your desktop wallpaper into an animated winter wonderland!\nFeatures falling snowflakes, flying birds, scenery like trees and deer, the moon, Santa, flapping birds, and more.\nOver time, snow will begin to collect on the top of your windows.\n\nTo run: Menu -&gt; Games -&gt; xsnow\nTo run in terminal: xsnow\n</code></pre>"},{"location":"apps-list/#creative-arts","title":"Creative Arts","text":""},{"location":"apps-list/#blockbench","title":"BlockBench","text":"<p>https://github.com/JannisX11/blockbench - JannisX11 (GitHub) for creating the program ryanfortner (GitHub) for writing scripts, and hosting the debs cycool29 (GitHub) for compiling debs ARM32/ARM64 - 1996 Users!</p> <pre><code>Blockbench is a free, modern model editor for low-poly and boxy models with pixel art textures. Models can be exported into standardized formats, to be shared, rendered, 3D-printed, or used in game engines. There are also multiple dedicated formats for Minecraft Java and Bedrock Edition with format-specific features.\n\nTo run:\nMenu -&gt; Programming -&gt; Blockbench\nTo run in a terminal:\n/opt/Blockbench/blockbench\n</code></pre>"},{"location":"apps-list/#boxy-svg","title":"Boxy SVG","text":"<p>https://boxy-svg.com/ - Botspot ARM32/ARM64 - 3854 Users!</p> <pre><code>The best vector graphics image editor for Raspberry Pi.\nPerformance is excellent, and I (Botspot) use it on my RPi for for all graphics editing. (Including the Pi-Apps logo!)\n\nNote: also see the Inkscape app.\n</code></pre>"},{"location":"apps-list/#dot-matrix","title":"Dot Matrix","text":"<p>https://github.com/lainsce/dot-matrix - Thanks to:  - @lainsce (Lains) on GitHub, as well as all the other contributors for creating Dot Matrix!  - @Crilum on GitHub for creating the scripts and submitting the app to Pi-Apps. ARM64 ONLY - 293 Users</p> <pre><code>The glyph playground of creativity from simple lines\n\nRun from Menu: Menu -&gt; Graphics -&gt; Dot Matrix\nRun from Terminal: flatpak run io.github.lainsce.DotMatrix\n</code></pre>"},{"location":"apps-list/#drawing","title":"Drawing","text":"<p>https://github.com/maoschanz/drawing - Botspot ARM32/ARM64 - 2861 Users!</p> <pre><code>Simple program used to hand-draw png images.\n\nTo run: Menu -&gt; Graphics -&gt; Drawing\nTo run in terminal: drawing\n\nNote: This serves a different purpose than Microsoft Paint. If you want a Paint-style tool, install Kolourpaint:\nsudo apt install kolourpaint\n</code></pre>"},{"location":"apps-list/#gimp","title":"GIMP","text":"<p>https://www.gimp.org/ - Made by The GIMP Team Added to Pi Apps by Lightstrike on Discord Package app - 33163 Users!!</p> <pre><code>Create images and edit photographs\n\nGIMP stands for \"GNU Image Manipulation Program\".\nWhether you are a graphic designer, photographer, illustrator, or scientist, GIMP provides you with sophisticated tools to get your job done. You can further enhance your productivity with GIMP thanks to many customization options and 3rd party plugins.\n\nTo run: Menu -&gt; Graphics -&gt; GNU Image Manipulation Program\nTo run in terminal: gimp\n</code></pre>"},{"location":"apps-list/#inkscape","title":"Inkscape","text":"<p>https://inkscape.org - 1Spinne in issue #1262 Package app - 8373 Users!</p> <pre><code>Popular free vector graphics editor\n\nWhether you are an illustrator, designer, web designer or just someone who needs to create some vector imagery, Inkscape is for you!\n\nFlexible drawing tools\nBroad file format compatibility\nPowerful text tool\nBezier and spiro curves\n\nNote: Also see the Boxy SVG tool.\n</code></pre>"},{"location":"apps-list/#kolourpaint","title":"Kolourpaint","text":"<p>https://apps.kde.org/kolourpaint/ - Botspot Package app - 2957 Users!</p> <pre><code>An easy-to-use paint program.\nKolourPaint is a simple painting program to quickly create raster images. It is useful as a touch-up tool and simple image editing tasks.\nFeatures:\n- Support for drawing various shapes: lines, rectangles, rounded rectangles, ovals and polygons\n- Curves, lines and text\n- Colour picker\n- Selections\n- Rotation, monochrome, redaction and other advanced effects\nTo run: Menu -&gt; Graphics -&gt; Kolourpaint\nTo run in terminal: kolourpaint\n</code></pre>"},{"location":"apps-list/#krita","title":"Krita","text":"<p>https://krita.org/ ARM64 ONLY - 21 Users</p> <pre><code>Krita is the full-featured digital art studio.\n\nIt is perfect for sketching and painting, and presents an end\u2013to\u2013end solution for creating digital painting files from scratch by masters.\n\nKrita is a great choice for creating concept art, comics, textures for rendering and matte paintings. Krita supports many colorspaces like RGB and CMYK at 8 and 16 bits integer channels, as well as 16 and 32 bits floating point channels.\n\nHave fun painting with the advanced brush engines, amazing filters and many handy features that make Krita enormously productive.\n</code></pre>"},{"location":"apps-list/#lego-digital-designer","title":"Lego Digital Designer","text":"<p>https://github.com/Botspot/lego-digital-designer-rpi - Botspot ARM32 ONLY - 3079 Users!</p> <pre><code>Play with virtual Lego blocks and create your own plans!\nThis is Lego's official (discontinued) brick design program. With it, you can build your own sets within the editor and paint the pieces any color you wish.\nAfterwards, you can generate step-by-step building plans and print them out. Or you could place your creation into a desert background and take a picture of it to share with friends.\n\nThis program runs extremely well on RPi. The only problem I (Botspot) could find was the sound effects don't work.\n</code></pre>"},{"location":"apps-list/#pinta","title":"Pinta","text":"<p>https://www.pinta-project.com/ - Botspot Package app - 2222 Users!</p> <pre><code>A powerful painting program including numberous adjustments, drawing tools, multiple layers, and a flexible interface.\n\nTo run: Menu -&gt; Graphics -&gt; Pinta\nTo run in a terminal: pinta\n</code></pre>"},{"location":"apps-list/#pixelorama","title":"Pixelorama","text":"<p>https://orama-interactive.itch.io/pixelorama - Emmanouil Papadeas for writing Pixelorama</p> <p>theofficialgman for compiling godot and Pixelorama ARM32/ARM64 - 543 Users</p> <pre><code>Pixelorama is a free and open source pixel art editor, proudly created with the Godot Engine, by Orama Interactive.\nWhether you want to make animated pixel art, game graphics, tiles and any kind of pixel art you want, Pixelorama has you covered with its variety of tools and features. Free to use for everyone, forever!\n</code></pre>"},{"location":"apps-list/#shotwell","title":"Shotwell","text":"<p>https://shotwell-project.org/doc/html/ - Botspot Package app - 14626 Users!!</p> <pre><code>Organize, edit, and publish your photos.\nTo run: Menu -&gt; Graphics -&gt; Shotwell\nTo run in terminal: shotwell\n</code></pre>"},{"location":"apps-list/#engineering","title":"Engineering","text":""},{"location":"apps-list/#cura","title":"Cura","text":"<p>https://github.com/smartavionics/Cura ARM32/ARM64 - 8533 Users!</p> <pre><code>Takes a 3D model and slices it for use in a 3D printer.\nTo run: Menu -&gt; Programming -&gt; Ultimaker Cura\nTo run in a terminal: ~/Cura.AppImage\n</code></pre>"},{"location":"apps-list/#eagle-cad","title":"Eagle CAD","text":"<p>http://eagle.autodesk.com/eagle/software-versions/1 - Botspot made this app. ARM32 ONLY - 2193 Users!</p> <pre><code>Design printed circuit boards.\nThis is Eagle CAD's last 32-bit Linux release (7.7.0), emulated using Box86. Subsequent Eagle releases dropped 32-bit support.\n\nTo run: Menu -&gt; Programming -&gt; Eagle\nTo run in a terminal: eagle\n</code></pre>"},{"location":"apps-list/#fritzing","title":"Fritzing","text":"<p>https://fritzing.org/ - theofficialgman for writing the install script ARM32/ARM64 - 1900 Users!</p> <pre><code>The Fritzing application is an Electronic Design Automation software with a low entry barrier, suited for the needs of makers and hobbyists.\nIt offers a unique real-life \"breadboard\" view, and a parts library with many commonly used high-level components. Fritzing makes it very easy to communicate about circuits, as well as to turn them into PCB layouts ready for production. \n\nTo run: Menu -&gt; Programming/Development -&gt; Fritzing\nTo run in a terminal: Fritzing --parts $HOME/.local/share/fritzing/parts\n</code></pre>"},{"location":"apps-list/#librecad","title":"LibreCAD","text":"<p>https://librecad.org/ - @Jai-JAP for adding this app to pi-apps Package app - 2626 Users!</p> <pre><code>Open Source 2D-CAD\nLibreCAD is a free Open Source CAD application for Windows, Apple and Linux. Support and documentation are free from our large, dedicated community of users, contributors and developers.\n\nDocumentation available at: https://dokuwiki.librecad.org/doku.php\n\nTo run: Menu -&gt; Graphics -&gt; LibreCAD\n</code></pre>"},{"location":"apps-list/#librepcb","title":"LibrePCB","text":"<p>https://librepcb.org/ ARM64 ONLY - 3116 Users!</p> <pre><code>LibrePCB is a free, cross-platform, easy-to-use electronic design automation suite to draw schematics and design printed circuit boards \u2013 for makers, students and professionals, from beginners to experts.\n\nThis software just lets you develop electronics the right way.\nNo costs. No restrictions. No online account. No unnecessary complexity.\n</code></pre>"},{"location":"apps-list/#mattercontrol","title":"MatterControl","text":"<p>https://mattercontrol.com - Botspot and theofficialgman ARM32/ARM64 - 824 Users</p> <pre><code>MatterControl is an all-in-one program to create, edit, slice, and manage your 3D prints.\nWhile not quite as popular as Cura or PrusaSlicer, this program offers features and supports printers that alternative programs don't.\n\nTo run: Menu -&gt; Accessories -&gt; MatterControl\nTo run in a terminal: mattercontrol\nPlease note that when the window first opens that it will be black. Resizing or maximizing the window will solve this problem.\n</code></pre>"},{"location":"apps-list/#mission-planner","title":"Mission Planner","text":"<p>https://ardupilot.org/planner/ - Botspot made this app. ARM32/ARM64 - 1391 Users</p> <pre><code>Software used to control autonomous vehicles.\nMission Planner is a free, open-source ground station for communicating with autonomous aircraft, vehicles, or boats running Ardupilot firmware. It's used to monitor such vehicles, view logs, and create waypoint missions.\n</code></pre>"},{"location":"apps-list/#openscad","title":"OpenSCAD","text":"<p>http://www.openscad.org/ https://github.com/koendv/openscad-raspberrypi ARM32/ARM64 - 2627 Users!</p> <pre><code>OpenSCAD is software for creating solid 3D CAD models.\n\nUnlike most free software for creating 3D models, OpenSCAD does not focus on\nthe artistic aspects of 3D modelling but instead on the CAD aspects.\nOpenSCAD is more suitable for creating 3D models of machine parts but\nperhaps not when creating computer-animated movies.\n\nOpenSCAD is not an interactive modeller. Instead OpenSCAD is something like\na 3D-compiler that reads in a script file that describes the object\nand renders the 3D model from this script file. This gives designers\nfull control over the modelling process and enables them to easily\nchange any step in the modelling process or make designs that are\ndefined by configurable parameters.\n\nTo run: Menu -&gt; Graphics -&gt; OpenSCAD\nTo run in a terminal: OpenSCAD.AppImage\n</code></pre>"},{"location":"apps-list/#prusaslicer","title":"PrusaSlicer","text":"<p>https://github.com/davidk/PrusaSlicer-ARM.AppImage ARM32/ARM64 - 3136 Users!</p> <pre><code>Takes a 3D model and slices it for use in a 3D printer.\nTo run: Menu -&gt; Programming -&gt; PrusaSlicer\nTo run in a terminal: ~/PrusaSlicer.AppImage\n</code></pre>"},{"location":"apps-list/#games","title":"Games","text":""},{"location":"apps-list/#amiberry","title":"Amiberry","text":"<p>https://github.com/midwan/amiberry/ - Program created by Dimitris Panokostas (midwan) on GitHub. Debian packages created by @ryanfortner (GitHub) Scripts created by @ryanfortner (GitHub) ARM32/ARM64 - 2828 Users!</p> <pre><code>Amiberry is a well-optimized, high-performance emulator for running Amiga games on low-power ARM boards like Raspberry Pi.\n\nRun it via the main Menu &gt; Games &gt; Amiberry.\n</code></pre>"},{"location":"apps-list/#astromenace","title":"AstroMenace","text":"<p>https://github.com/viewizard/astromenace - All contributer in github page added to pi-apps by Painadath samuelpainadath@gmail.com ARM32/ARM64 - 3386 Users!</p> <pre><code>Immerse into a decisive battle against tons of cunning foes, face the terrifying bosses and protect your homeland throughout 15 diverse levels of the game. The hardcore gameplay of AstroMenace, packed with pure non-stop action, will become a full scale test for your basic instinct of survival.\n</code></pre>"},{"location":"apps-list/#celeste-classic","title":"Celeste Classic","text":"<p>lemon32767 for the classic celeste port theofficialgman for better controller support additions and the pi-apps script Matt Thorson and Noel Berry for making the original game ARM32/ARM64 - 1267 Users</p> <pre><code>This is a C source port of the original celeste (Celeste classic) for the PICO-8, designed to be portable.\n\nThis game can be played with controllers or with keyboard. The general mapping is found here: https://github.com/lemon32767/ccleste#controls\n\nTo run: Menu -&gt; Games -&gt; Celeste Classic\n</code></pre>"},{"location":"apps-list/#chiaki","title":"Chiaki","text":"<p>https://github.com/Fredrum/chiaki/wiki/Chiaki-for-the-Raspberry-Pi - Chiaki software implementation by Florian M\u00e4rkl: https://github.com/thestr4ng3r Raspberry Pi fork implementation by Blueroom VR: https://github.com/Fredrum Added to Pi-Apps by Markieautarkie: https://github.com/Markieautarkie ARM32/ARM64 - 1608 Users!</p> <pre><code>Chiaki is a free and open source software client which enables PlayStation 4/5 remote play on the Raspberry Pi.\n\nChiaki wiki: https://git.sr.ht/~thestr4ng3r/chiaki\nPi fork wiki: https://github.com/Fredrum/chiaki/wiki/Chiaki-for-the-Raspberry-Pi\n\nTo run: Menu -&gt; Games -&gt; Chiaki\nTo run in a terminal: Chiaki/build/gui/chiaki\n\n----- Usage -----\nOnce Chiaki is running, you can enter the settings menu (top right) to configure general/stream settings to your liking. Note that stream quality options are limited depending on your console. To connect and use a controller with Chiaki, please refer to the Pi fork wiki.\nIn most cases, Chiaki will automatically detect your console if it's turned on. Otherwise, you can add it manually by pressing the \"+\" icon (top right) and entering your console's IP address.\n\nTo finalize the registration, two more parameters need to be set.\nPSN AccountID: In a terminal, enter \"python3 Chiaki/psn-account-id.py\" and follow the instructions.\nRegistration PIN:\nOn a PS4, go to: Settings -&gt; Remote Play -&gt; Add Device;\nOn a PS5, go to: Settings -&gt; System -&gt; Remote Play -&gt; Link Device.\n\nYou can now double-click your console in Chiaki's main window to start remote play!\n</code></pre>"},{"location":"apps-list/#ddnet","title":"DDNet","text":"<p>https://ddnet.org/ - Install Script made by Kolpix#1391 Thanks to Crilum on Github for helping ARM32/ARM64 - 708 Users</p> <pre><code>DDRaceNetwork is a 2D cooperative platformer experience. Work together with up to 64 people and push your way through maps.\nYou will see the best and worst in your teammates when they save you from certain death or leave you behind in the dust.\nWe've developed DDNet for over 7 years now and made it greater than ever!\nIt has been free-to-play and free-to-win since development started and will always stay free.\nIt's also open source, so everyone is invited to help improve it with great new ideas!\n\nTo run: Menu -&gt; Games -&gt; DDnet\n\nIf you want to host an online Server you have to activate Port Forwarding in your Router Settings. \nYou have to create a Port Forwarding with the protocol udp and the Port of your Server (standard is 8303) \n</code></pre>"},{"location":"apps-list/#descent-1","title":"Descent 1","text":"<p>&lt;https://www.dxx-rebirth.com/&gt; ARM32 ONLY - 2302 Users!</p> <pre><code>D1X-Rebirth - source port of Descent: First Strike from 1995\nThis package installs the shareware version, if you own the full game you can copy the game data to ~/.d1x-rebirth directory (replacing existing files).\nTo run: Menu -&gt; Games -&gt; Descent 1\nTo run in a terminal: ~/.d1x-rebirth/d1x-rebirth-rpi -hogdir ~/.d1x-rebirth\nTo exit: select \"Quit\" in the game's main menu.\n</code></pre>"},{"location":"apps-list/#descent-2","title":"Descent 2","text":"<p>https://www.dxx-rebirth.com/ ARM32 ONLY - 2122 Users!</p> <pre><code>D2X-Rebirth - source port of Descent 2: Counterstrike from 1996\nThis package installs the shareware version, if you own the full game you can copy the game data to ~/.d2x-rebirth directory (replacing existing files).\nTo run: Menu -&gt; Games -&gt; Descent 2\nTo run in a terminal: ~/.d1x-rebirth/d1x-rebirth-rpi -hogdir ~/.d1x-rebirth\nTo exit: select \"Quit\" in the game's main menu.\n</code></pre>"},{"location":"apps-list/#doom-3","title":"Doom 3","text":"<p>https://github.com/techcoder20/RPIDoom3Installer.git - Script Created By RPI Coder Added To Pi apps by Botspot</p> <p>Testers: Lukefrenner Botspot Nikolay Dubnov ARM32/ARM64 - 16947 Users!!</p> <pre><code>Doom 3 is a 2004 horror first-person shooter video game developed by id Software and published by Activision.\nIn this game a massive demonic invasion has overwhelmed the Union Aerospace Corporation's (UAC) Mars Research Facility, leaving only chaos and horror in its wake.\nAs one of only a few survivors, you must fight your way to hell and back against a horde of evil monsters.\n</code></pre>"},{"location":"apps-list/#friday-night-funkin-rewritten","title":"Friday Night Funkin' Rewritten","text":"<p>https://github.com/HTV04/funkin-rewritten - HTV04 For this Engine.  LOVE2D devs AM7999#8935 For putting this up on Pi-Apps And ninjamuffin99 for the original Friday Night Funkin' Game ARM32/ARM64 - 1383 Users</p> <pre><code>Friday Night Funkin\u2019 is a musical rhythm game where you compete in freestyle music battles.\nThe father of your girlfriend is always a pain, because no matter what you do, you may never be good enough for his daughter. In Friday Night Funkin, you are the \"Boyfriend\", and this clich\u00e9 comes together in a colorful and musical mash. The fun of Friday and the stress of meeting your significant other's father will make your knees shake and your heart tingle.\n\nThis version is entirely re-written in an engine called LOVE2D\n\nPLEASE DO NOTE: SOME TEXTURES MAY DISPLAY INCORRECTLY! THIS IS A KNOWN ISSUE!\n\nTo run: Menu -&gt; Games -&gt; Friday Night Funkin' Rewritten\nTo run in terminal: love $HOME/.love_games/friday_night_funkin_rewritten/funkin-rewritten.love\n\nAs this game is still a work in progress, some settings (like setting fullscreen mode) can only be changed via an ini file: ~/.local/share/love/funkin-rewritten/settings.ini\n</code></pre>"},{"location":"apps-list/#godot","title":"Godot","text":"<p>https://github.com/hiulit/Unofficial-Godot-Engine-Raspberry-Pi - Credits to Irtexo for putting it on Pi-Apps. Credits to Hiulit for porting it to the Raspberry Pi. Credits to Juan Linietsky and Ariel Manzur for creating Godot Engine. ARM32/ARM64 - 2896 Users!</p> <pre><code>Open Source Game Engine that runs fine on the Raspberry Pi (for 2d games).\nFor the export instructions for Raspberry Pi, go to the website.\nThis software will only run on the Raspberry Pi 4/Raspberry Pi 400.\nGLES2 projects are recommended.\nTo run from GUI: Menu -&gt; Programming -&gt; Godot\nTo run in a terminal: ~/Godot/godot_*-stable_rpi4_editor*\n</code></pre>"},{"location":"apps-list/#heroes-2","title":"Heroes 2","text":"<p>https://github.com/ihhub/fheroes2 ARM32 ONLY - 3483 Users!</p> <pre><code>Free implementation of Heroes of Might and Magic II game engine.\nThis package installs the shareware version, if you own the full game you can copy the game data to ~/.fheroes2 directory (replacing existing files).\nTo run: Menu -&gt; Games -&gt; Free Heroes 2\nTo run in a terminal: ~/.fheroes2/fheroes2-rpi\n</code></pre>"},{"location":"apps-list/#linerider","title":"LineRider","text":"<p>https://github.com/Sussy-OS/LRA-Community-Edition - Sussy-OS (rb24#0032), Cycool, and theofficialgman for writing the install script Sussy-OS (rb24#0032) for making it work on linux, o7Moon for special features, and Bo\u0161tjan \u010cade\u017e for the original https://linerider.com game. ARM32/ARM64 - 2159 Users!</p> <pre><code>Draw a track for a sledder to ride on. Make it sync with music and share your work with friends!\nThis app, LineRider Community Edition, is a C# rewrite of the original flash game.\n\nTo run: Menu -&gt; Games -&gt; LineRider\nTo run in a terminal: mono ~/LineRider/linerider.exe\n\nTo view other's creations, go to https://reddit.com/r/linerider or https://discord.gg/QWu6R5w\n</code></pre>"},{"location":"apps-list/#marathon","title":"Marathon","text":"<p>https://https://alephone.lhowon.org - Rak1ta on github for the install scripts theofficialgman for tweaking them and adding them to pi-apps The developers at https://github.com/Aleph-One-Marathon ARM32/ARM64 - 592 Users</p> <pre><code>Marathon, Marathon 2 and Marathon Infinity are single and online multiplayer old school 1st person shooter games.\nAleph One is the open source continuation of Bungie\u2122\u2019s Marathon\u00ae 2 game engine and played these games.\nMany third party scenarios and net maps are also available. Available for Mac OS X, Windows, and Linux.\nThis package includes the Marathon trilogy.\n\nTo run:\n  Menu -&gt; Games -&gt; Marathon, Marathon 2, or Marathon Infinity\n\nTo run in a terminal: \n  /usr/local/bin/alephone ~/AlephOneData/Marathon/\n  /usr/local/bin/alephone ~/AlephOneData/Marathon_2/\n  /usr/local/bin/alephone ~/AlephOneData/Marathon_Infinity/\n</code></pre>"},{"location":"apps-list/#minecraft-bedrock","title":"Minecraft Bedrock","text":"<p>https://github.com/ChristopherHX/linux-packaging-scripts/releases/tag/appimage - Install script written by RaspberryPiNews on YT Appimage made by ChristopherHX on Github Program made by everyone at minecraft-linux on Github ARM32/ARM64 - 22781 Users!!</p> <pre><code>Unofficial launcher for Minecraft Bedrock edition\nNOTE: For better performance and smooth FPS, we recommend an older Bedrock version like 1.16.40 as it doesn't contain renderdragon or RTX code.\n\nRun with the menu app \"Minecraft Bedrock Launcher\" or with the command \"GALLIUM_HUD=simple,fps /opt/MCBedrock.AppImage\"\n \u2219 Sign in with a Google Play account with Minecraft purchased\n \u2219 Active comunity to ask for help\n \u2219 FPS Counter mod\n \u2219 And much more!\n</code></pre>"},{"location":"apps-list/#minecraft-java-gdlauncher","title":"Minecraft Java GDLauncher","text":"<p>https://gdevs.io/ - theofficialgman ARM32/ARM64 - 1834 Users!</p> <pre><code>GDLauncher is simple, yet powerful Minecraft launcher with a strong focus on the user experience. This is a CUSTOM BUILD of GDLauncher for ARM32/ARM64 support.\n\nFeatures of the launcher:\n- Microsoft, Mojang, and PC GamePass Account support\n- Curseforge and FTB Mod and Modpack browser and updater\n- Automatic Java 8/17 installation\n- Fabric and Forge mod loading\n\nFeatures NOT in this launcher (but available in others):\n- Modrinth ATLauncher and Technic Mod and Modpack browser and updater\n- Quilt mod loading\n- Old Snapshots\n\nNOTE: The use of performance enhancing mods is highly encouraged, such as optifine with Optifabric and Fabric/Forge or Sodium/Lithium/Starlight Fabric Mods.\n\nTo run: Menu -&gt; Games -&gt; GDLauncher\nTo run in a terminal: MESA_GL_VERSION_OVERRIDE=3.3 gdlauncher\n\ntheofficialgman's custom meta repo is used for arm32 and arm64 native libraries. (https://github.com/theofficialgman/piston-meta-arm32 https://github.com/theofficialgman/piston-meta-arm64)\nThis supports all currently released versions of minecraft.\n\nNote: GDLauncher GitHub/Discord does NOT support this CUSTOM BUILD, any issues should be directed to the Pi-Apps Discord or Pi-Apps GitHub issues.\n</code></pre>"},{"location":"apps-list/#minecraft-java-lunar","title":"Minecraft Java Lunar","text":"<p>https://www.lunarclient.com/ - Lunar Client is developed by MoonsworthLLC The ARM fork of Lunar Client is maintained by gl91306 on Github: https://github.com/gl91306/lunar ARM lwjgl2/3 libs from theofficialgman Install script written by RaspberryPiNews on Youtube/mobilegmYT on Github Scripts re-written by Botspot and theofficialgman  ARM32/ARM64 - 41443 Users!!</p> <pre><code>Lunar Client is an all-in-one modpack integrated Launcher available for ONLY popular versions of Minecraft.\n\nFeatures of the launcher:\n- Microsoft, Mojang, and PC GamePass Account support\n- Automatic Java 8/17 installation\n- Supports a selected list of minecraft versions with with a highly modified client geared toward PVP\n\nFeatures NOT in this launcher (but available in others):\n- Modloading support\n- Mod/Modpack installation and updating\n- Support for many versions of Minecraft\n\nThis installs a fork of Lunar Client with patched dependencies for ARMhf/ARM64 support.\n\nTo run: Menu -&gt; Games -&gt; Lunar Client\nTo run in a terminal: ~/.local/bin/lunarclient.AppImage --no-sandbox\n\nNOTE: For best performance, we recommend an older version of Minecraft like 1.12.2 or 1.8\n\nNeed help? Please open an issue on this repository: https://github.com/gl91306/lunar\n</code></pre>"},{"location":"apps-list/#minecraft-java-multimc5","title":"Minecraft Java MultiMC5","text":"<p>https://github.com/MultiMC/Launcher - Install script written by theofficialgman based on the version for the L4T Megascript ARM32/ARM64 - 11335 Users!!</p> <pre><code>CUSTOM BUILD of MultiMC5/Launcher. MultiMC is an alternative launcher for Minecraft. It allows you to have multiple, cleanly separated instances of Minecraft (each with their own mods, resource packs, saves, etc) and helps you manage them and their associated options with a simple and powerful interface. \n\nThis is a buildscript for MultiMC5 (necessary for licensing reasons). Expect a 1+ hour build and install time.\nAll users are encouraged to instead install Prism Launcher (a PolyMC/MultiMC5 fork with many additional features) which is a prebuilt deb.\n\nFeatures of the launcher:\n- Microsoft, Mojang, and PC GamePass Account support\n- Modrinth FTB ATLauncher and Technic Modpack ONLY browser\n- Automatic Java 8/17 installation\n- Fabric, Forge, and Quilt mod loading\n- Supports minecraft versions from the old beta/alphas all the way up the latest snapshots\n\nFeatures NOT in this launcher (but available in others):\n- Mod browser\n- Curseforge Modpack browser\n- Mod/Modpack updater\n- Old Snapshots\n\nNOTE: The use of performance enhancing mods is highly encouraged, such as optifine with Optifabric and Fabric/Forge or Sodium/Lithium/Starlight Fabric Mods.\n\nMinecraft Java MultiMC5 for ARM\nTo run: Menu -&gt; Games -&gt; MultiMC\nTo run in a terminal: ~/MultiMC/install/MultiMC\n\nIMPORTANT: How to choose the correct Java version: https://github.com/MultiMC/Launcher/wiki/Using-the-right-Java#setting-up-java-in-multimc\nThe MultiMC5 Wiki can be found here: https://github.com/MultiMC/MultiMC5/wiki\nIf you need help installing Optifine: https://github.com/MultiMC/MultiMC5/wiki/MultiMC-and-OptiFine\n\ntheofficialgman's custom meta repo is used for arm32 and arm64 native libraries. (https://github.com/theofficialgman/meta-multimc)\nThis supports all currently released versions of minecraft.\n\nNote: MultiMC5 GitHub/Discord does NOT support this CUSTOM BUILD, any issues should be directed to the Pi-Apps Discord or Pi-Apps GitHub issues.\n</code></pre>"},{"location":"apps-list/#minecraft-java-prism-launcher","title":"Minecraft Java Prism Launcher","text":"<p>https://prismlauncher.org/ - Prism Launcher contributors: https://github.com/PrismLauncher/PrismLauncher/graphs/contributors theofficialgman for packaging arm32/arm64 debs ARM32/ARM64 - 1514 Users!</p> <pre><code>Prism Launcher is an Open Source Minecraft launcher with the ability to manage multiple instances, accounts and mods. Focused on user freedom and free redistributability.\n\nFeatures of the launcher:\n- Microsoft, Mojang, and PC GamePass Account support\n- Curseforge Modrinth FTB ATLauncher and Technic Mod and Modpack browser and updater\n- Automatic Java 8/17 installation\n- Fabric, Forge, and Quilt mod loading\n- Supports minecraft versions from the old beta/alphas and old snapshots all the way up the latest snapshots\n\nFeatures NOT in this launcher (but available in others):\n- NONE\n\nNOTE: The use of performance enhancing mods is highly encouraged, such as optifine with Optifabric and Fabric/Forge or Sodium/Lithium/Starlight Fabric Mods.\n\nTo run: Menu -&gt; Games -&gt; Prism Launcher\nTo run in a terminal: MESA_GL_VERSION_OVERRIDE=3.3 prismlauncher\n\nThe Prism Launcher Wiki can be found here: https://prismlauncher.org/wiki/\nOptifine alternatives: https://prismlauncher.org/wiki/getting-started/install-of-alternatives/\nIf you need help installing Optifine: https://prismlauncher.org/wiki/getting-started/installing-optifine/\n\nNote: Prism Launcher officially supports Linux and MacOS ARM through community collaboration.\n</code></pre>"},{"location":"apps-list/#minecraft-java-server","title":"Minecraft Java Server","text":"<p>https://serverjars.com - Thanks to: Mojang for creating the Minecraft server. theofficialgman who wrote the script GYKGAMER for the initial idea/implementation Crilum for bugtesting ARM32/ARM64 - 4700 Users!</p> <pre><code>This is a simple tool to create a Minecraft server: Vanilla, Fabric, Forge, Paper, Bukkit, Spigot, Sponge, Purpur and Tuinity are supported\n\nYou can play over your local network (or you can create a port forward on your internet router/modem at port 25565 to play over the internet)\n\nMinecraft Server for the ARM\nTo run: Menu -&gt; Games -&gt; Minecraft Java Server\nAttach to a server in the background with: screen -r Minecraft_Server\nDetach from a running server session with: CTRL+A then D\nTo start from a terminal: sudo systemctl start minecraft-server\nTo stop the server: sudo systemctl stop minecraft-server\nTo start on automatically on boot and stop on shutdown: sudo systemctl enable minecraft-server\n\nRefer to the ~/Minecraft-Java-Server/start-server.sh file if you need to add custom JVM arguements\n\nTemurin (Adoptium) or AdoptOpenJDK Java 8/16/17 apt repos are used in this installer for compatibility.\n\nIf you uninstall or update this app for whatever reason, your world, mod, and versions folder will remain in ~/Minecraft-Java-Server so there is no data loss.\n</code></pre>"},{"location":"apps-list/#minecraft-pi-modded","title":"Minecraft Pi (Modded)","text":"<p>https://discord.com/invite/aDqejQGMMy - Game mods made by TheBrokenRail#5376 on Discord</p> <p>Ported to Pi-Apps by TheBrokenRail#5376 on Discord with a little help from Botspot. ARM32/ARM64 - 37987 Users!!</p> <pre><code>A modded version of Minecraft: Pi Edition with things like survival mode, multiplayer support, and more!\n\nTo open the game: Menu &gt; Games &gt; Minecraft Pi (Modded)\n\nNeed help? Consider asking on MCPI Modded's Discord server instead: https://discord.gg/3wXu3xtr\n\nControls:\nWASD to move\nMouse to look around\nF1 key to hide HUD\nF5 to switch to 3rd person view\n\nNotes:\nTo make a crafting table, press \"E\" and then go to the Craft menu in the upper left-hand corner. Click on what you want to craft, then click the big button with all of the stuff needed to craft the item to craft it.\nMouse scroll doesn't exist, you need to use your mouse to drag stuff like the crafting menu.\n</code></pre>"},{"location":"apps-list/#pac-man","title":"Pac-Man","text":"<p>https://github.com/ebuc99/pacman - Pac-Man source code from ebuc99 on github https://github.com/ebuc99/pacman ARM32/ARM64 - 4923 Users!</p> <pre><code>Pac-Man clone in SLD2 and C/C++\nTo run: Menu -&gt; Games -&gt; Pacman (SDL)\nTo run in a terminal: pacman_sdl\n</code></pre>"},{"location":"apps-list/#ppsspp-psp-emulator","title":"PPSSPP (PSP emulator)","text":"<p>http://ppsspp.org - Added to pi-apps by @ryanfortner (Github) ARM32/ARM64 - 11114 Users!!</p> <pre><code>A PSP emulator that can run PSP games in full HD and can upscale textures also.\n\nHow to run: Menu &gt; Games &gt; PPSSPP\n</code></pre>"},{"location":"apps-list/#project-outfox","title":"Project OutFox","text":"<p>https://projectoutfox.com/ - Stepmania contributors: https://github.com/stepmania/stepmania/graphs/contributors Project OutFox contributors: https://projectoutfox.com/about ARM32/ARM64 - 316 Users</p> <pre><code>Project OutFox is a free BUT CLOSED SOURCE, cross-platform rhythm game. It is a fork of the OPEN SOURCE game, StepMania. It supports common key-based rhythm game formats (including 4-panel and 5-panel dance games among others), as well as keyboard and dance pad controllers.\nIt is customizable with user-made add-ons such as themes, and provides an integrated editor for creating your own simfiles.\n\nProject OutFox only comes with a couple of songs, so you are expected to add your own content! There are multiple websites out there for hosting songpacks, here is one of them: https://search.stepmaniaonline.net/\nThere are also official Project OutFox packs here: https://projectoutfox.com/outfox-serenity\n\nTo run: Menu -&gt; Games -&gt; Project OutFox\nTo run in a terminal: ~/ProjectOutFox/*/OutFox\n\nHow to customize Project OutFox (adding songpacks, theming, etc):\nhttps://outfox.wiki/user-guide/config/folders/\n\nYour User Data folder is where you place custom content (like songpacks):\n~/.project-outfox\n</code></pre>"},{"location":"apps-list/#pychess","title":"PyChess","text":"<p>http://www.pychess.org/ - Rak1ta Crilum ARM32/ARM64 - 2060 Users!</p> <pre><code>PyChess is a chess client for playing and analyzing chess games. It is intended to be usable both for those totally new to chess as well as advanced users who want to use a computer to further enhance their play.\nWhen you get sick of playing computer players you can login to FICS (the Free Internet Chess Server) and play against people all over the world. PyChess has a built-in Timeseal client, so you won't lose clock time during a game due to lag. PyChess also has pre-move support, which means you can make (or start making) a move before your opponent has made their move.\nPyChess has many other features including: - CECP and UCI chess engine support with customizable engine configurations - Polyglot opening book support - Hint and Spy move arrows.\n\n\nTo run: Menu -&gt; Accessories -&gt; pychess\nTo run in terminal: pychess\n</code></pre>"},{"location":"apps-list/#shattered-pixel-dungeon","title":"Shattered Pixel Dungeon","text":"<p>https://shatteredpixel.com/ - Evan Debenham for his work on Shattered Pixel Dungeon and keeping it Open Source Watabou for the original Pixel Dungeon and making it Open Source ARM32/ARM64 - 1597 Users!</p> <pre><code>Shattered Pixel Dungeon is a Roguelike Dungeon Crawler RPG with pixel art graphics.\nEvery game is a unique challenge, with four different playable characters, randomized levels and enemies, and hundreds of items to collect and use.\nThe game is simple to get into, but strategy is required if you want to win!\n\nTo run: Menu -&gt; Games -&gt; Shattered Pixel Dungeon\n\nSaves and configs are stored in: ~/.local/share/.shatteredpixel/shattered-pixel-dungeon\n</code></pre>"},{"location":"apps-list/#steam","title":"Steam","text":"<p>ARM64 ONLY - 18311 Users!!</p> <pre><code>This emulates the Linux x86_64 version of Steam using Box86 and Box64.\n\nIn most cases, you WILL need to REBOOT before running Steam for the first time to prevent errors.\nTo run: Menu -&gt; Games -&gt; Steam\n</code></pre>"},{"location":"apps-list/#steam-link","title":"Steam Link","text":"<p>Botspot Package app - 6718 Users!</p> <pre><code>The Steam Link app brings desktop gaming to your Raspberry Pi. Just pair a controller to your device, connect to a computer running Steam on the same local network, and start playing your existing Steam games.\nTo run: Menu -&gt; Games -&gt; Steam Link\nTo run in a terminal: steamlink\n</code></pre>"},{"location":"apps-list/#stepmania","title":"StepMania","text":"<p>https://www.stepmania.com/ - Stepmania contributors: https://github.com/stepmania/stepmania/graphs/contributors ARM32/ARM64 - 180 Users</p> <pre><code>StepMania is a free and open source, cross-platform rhythm game. It supports common key-based rhythm game formats (including 4-panel and 5-panel dance games among others), as well as keyboard and dance pad controllers.\nIt is customizable with user-made add-ons such as themes, and provides an integrated editor for creating your own simfiles.\n\nStepmania by default only comes with three songs, so you are expected to add your own content! There are multiple websites out there for hosting songpacks, here is one of them: https://search.stepmaniaonline.net/\n\nTo run: Menu -&gt; Games -&gt; Stepmania\nTo run in a terminal: /usr/local/stepmania-5.1/stepmania\n\nHow to customize stepmania (adding songpacks, theming, etc):\nhttps://github.com/stepmania/stepmania/wiki/Customization\n\nYour User Data folder is where you place custom content (like songpacks):\n~/.stepmania-5.1\n</code></pre>"},{"location":"apps-list/#stunt-rally","title":"Stunt Rally","text":"<p>http://stuntrally.tuxfamily.org/ - Compiled and packaged into a deb by Itai-Nelken and ryanfortner. Added to pi-apps by Itai-Nelken. ARM32/ARM64 - 7006 Users!</p> <pre><code>Racing game with rally style driving, mostly on gravel.\nWARNING: at least 2GB of free disk space is needed!\n\nPi-Apps automatically sets the game's settings for best performance. Feel free to experiment and find the best settings for you.\n\nStunt Rally features a rich variety of 172 tracks in 34 sceneries also on other planets.\nTrack difficulty ranges from short and easy, to very difficult stunt tracks including jumps, skewed loops, pipes winding in 3D, obstacles, or all of the above.\nVehicle options: 20 cars, 1 motorbike, 3 hovering spaceships and 1 bouncing sphere.\nThe latter provide a fast and easier gameplay on flat tracks.\nGame modes include:\nSingle Race, Tutorials, Championships, Challenges, Multiplayer and Split Screen.\nAlso Replays and Ghost drive are present.\nThe Track Editor allows creating and modifying tracks. It uses a 3D spline generated road.\n\nTo run: Menu -&gt; Games -&gt; Stunt Rally\nTo run in terminal: stuntrally\n\nTo run track editor: Menu -&gt; Games -&gt; Stunt Rally Track Editor\nTo run in terminal: sr-editor\n\n</code></pre>"},{"location":"apps-list/#tetris-cli","title":"Tetris CLI","text":"<p>https://github.com/k-vernooy/tetris - DEB packages hosted by ryanfortner ARM32/ARM64 - 3758 Users!</p> <pre><code>ASCII/CLI rendition of the Tetris game.\n\nAs one of the most recognizable and influential video game brands in the world, it\u2019s no wonder why there are hundreds of millions of Tetris products being played, worn, and enjoyed by fans in their everyday lives. For over thirty-five years, the game and brand have truly transcended the barriers of culture and language, resulting in a fun and exciting playing experience for everyone, everywhere!\n\nTo run: Menu -&gt; Games -&gt; Tetris CLI\nIn terminal: tetris\n</code></pre>"},{"location":"apps-list/#unciv","title":"Unciv","text":"<p>https://github.com/yairm210/Unciv - Added by Md. Touhidur Rahman   Github: https://github.com/touhidurrr   Website: https://touhidur.xyz</p> <p>Temurin Installation Script by theofficialgman   Github: https://github.com/theofficialgman</p> <p>Enhanced Descriptions and Script Reviews by cycool29   Github: https://github.com/cycool29</p> <p>Tested by Botspot   Github: https://github.com/Botspot ARM32/ARM64 - 2170 Users!</p> <pre><code>An open-source, mod-friendly Android+Desktop remake of Civ V\n\nA reimplementation of the most famous civilization-building game ever\u2014fast,\nsmall, no ads, free forever!\n\nBuild your civilization, research technologies, expand your cities and\ndefeat your foes!\n\nTo run: Menu -&gt; Games -&gt; Unciv\n</code></pre>"},{"location":"apps-list/#worldpainter","title":"WorldPainter","text":"<p>https://www.worldpainter.net/ - Credits to Irtexo for creating the initial scripts. Credits to the worldpainter creators : https://www.worldpainter.net/trac/wiki/Credits ARM32/ARM64 - 1154 Users</p> <pre><code>WorldPainter is an interactive map generator for Minecraft.\nIt allows you to \"paint\" landscapes using similar tools as a regular paint program.\nSculpt and mould the terrain, paint materials, trees, snow and ice, etc. onto it, and much more.\n</code></pre>"},{"location":"apps-list/#internet","title":"Internet","text":""},{"location":"apps-list/#angry-ip-scanner","title":"Angry IP scanner","text":"<p>https://angryip.org - @Itai-Nelken (GitHub) @ryanfortner (GitHub) ARM32/ARM64 - 15338 Users!!</p> <pre><code>Scans local networks as well as Internet\nIP Range, Random or file in any format.\nExports results into many formats,\nExtensible with many data fetchers,\nProvides command-line interface,\nFree and open-source.\n\nWarning, using this improperly may get you in a lot of trouble. Be sure you're within legal limits.\n</code></pre>"},{"location":"apps-list/#anydesk","title":"AnyDesk","text":"<p>https://anydesk.com/en/downloads/raspberry-pi - @fabianmendes just brought it to the pi-apps. ARM32 ONLY - 6596 Users!</p> <pre><code>AnyDesk is the ultimate remote desktop solution for editing and maintaining a desktop or server from a remote location using Linux on Raspberry Pi.\nEnjoy smooth and seamless remote operation of external computer systems.\n\nAnyDesk is free for private use and offers flexible license models for organizations.\n\nRun from Menu -&gt; Internet -&gt; AnyDesk\nRun from Terminal: anydesk\n</code></pre>"},{"location":"apps-list/#cloudbuddy","title":"CloudBuddy","text":"<p>https://github.com/Botspot/cloudbuddy - Botspot made, Botspot added. ARM32/ARM64 - 4593 Users!</p> <pre><code>CloudBuddy is the ultimate wizard for cloud storage. Google Drive, Onedrive, Dropbox, and many more.\nBotspot made this gui frontend for the popular rclone tool to connect to your cloud drives, download from them, upload to them, mount them to your file manager, and more. In addition, CloudBuddy features an interactive file browser to easily generate shareable links and to perform various server-side operations.\n\nTo run: Menu -&gt; Internet -&gt; CloudBuddy\nTo run in terminal: ~/cloudbuddy/main.sh\n</code></pre>"},{"location":"apps-list/#deluge","title":"Deluge","text":"<p>https://www.deluge-torrent.org - Botspot Package app - 4799 Users!</p> <pre><code>Lightweight BitTorrent client\nUse this to download torrent files from the Internet. For example, you can download a Torrent version of Raspberry Pi OS.\n\nTo run: Menu -&gt; Internet -&gt; Deluge\nTo run in a terminal: deluge-gtk\n\nAlso see the Transmission app.\nNote: Torrents can contain illegal material, like pirated movies or cracked games. You use Deluge at your own risk.\n</code></pre>"},{"location":"apps-list/#deskreen","title":"Deskreen","text":"<p>https://deskreen.com/ - Thanks to pavlobu and all contibuters for developing Deskreen. Thanks to Crilum on GitHub for making the scripts. Thanks to ryanfortner on GitHub for having and hosting the debs! ARM32/ARM64 - 2008 Users!</p> <pre><code>Share your desktop to your browser, and turn any device into a second screen!\n\nHow to run: Menu -&gt; Programming -&gt; Deskreen\nor run from your Terminal: deskreen\n</code></pre>"},{"location":"apps-list/#filezilla","title":"Filezilla","text":"<p>https://filezilla-project.org/ - Botspot Package app - 9274 Users!</p> <pre><code>Download and upload files via FTP, FTPS, and HTTP\nThis all allows you to connect to file-sharing servers on your home network or on the world wide web.\nTo run: Menu -&gt; Internet -&gt; Filezilla\nTo run in terminal: filezilla\nNote: For more cloud-storage, see the CloudBuddy app.\n</code></pre>"},{"location":"apps-list/#httrack-website-copier","title":"HTTrack Website Copier","text":"<p>https://httrack.com - Thanks to:  - Xavier Roche and all contributors for creating HTTrack!  - Thanks to Crilum on GitHub for adding HTTrack to Pi-Apps! Package app - 1739 Users!</p> <pre><code>HTTrack is a free and easy-to-use offline browser utility.\n\nIt allows you to download a World Wide Web site from the Internet to a local directory, building recursively all directories, getting HTML, images, and other files from the server to your computer. HTTrack arranges the original site's relative link-structure. Simply open a page of the \"mirrored\" website in your browser, and you can browse the site from link to link, as if you were viewing it online. HTTrack can also update an existing mirrored site, and resume interrupted downloads. HTTrack is fully configurable, and has an integrated help system. \n\nThis will also install WebHTTrack, which is a graphical version of HTTrack that uses a locally served website as a GUI.\n\nTo run HTTrack:\nRun from Terminal: httrack\n\nTo run WebHTTrack (graphical version of HTTrack):\nRun from Terminal: webhttrack\nRun from Menu: Menu -&gt; Internet -&gt; WebHTTrack Website Copier\n</code></pre>"},{"location":"apps-list/#persepolis-download-manager","title":"Persepolis Download Manager","text":"<p>https://persepolisdm.github.io/ ARM32/ARM64 - 909 Users</p> <pre><code>Persepolis is a Download Manager and a GUI For aria2. \n\nIt's written in Python. Persepolis is a Sample of Free and open source software. It's developed For GNU/Linux Distributions, BSDs, macOS and Microsoft Windows. \n</code></pre>"},{"location":"apps-list/#speedtest-cli","title":"SpeedTest-CLI","text":"<p>https://www.speedtest.net/ ARM32/ARM64 - 13471 Users!!</p> <pre><code>Test your internet speed from a terminal!\nAre you familiar with speedtest.net? This tool is created by the same team.\nThis version is much newer than the speedtest-cli package available in the repositories.\n\nTo run: Menu -&gt; Internet -&gt; Run Speedtest\nTo run in a terminal: speedtest\n</code></pre>"},{"location":"apps-list/#teamviewer","title":"TeamViewer","text":"<p>https://github.com/Benmac83/Teamviewer-installer-for-pi - Benmac83 on the Botspot discord server, GYKGamer on GitHub for the heads up on the client/host preview, and theofficialgman for the scripts ARM32/ARM64 - 5326 Users!</p> <pre><code>Remote desktop server and client software.\nTo run: Menu -&gt; Internet -&gt; TeamViewer\nTo run in terminal: teamviewer\nIf you get an error running it from command line follow the instructions it gives you. They're very simple to follow.\n</code></pre>"},{"location":"apps-list/#transmission","title":"Transmission","text":"<p>https://transmissionbt.com - Botspot Package app - 10210 Users!!</p> <pre><code>Lightweight BitTorrent client\nUse this to download torrent files from the Internet. For example, you can download a Torrent version of Raspberry Pi OS.\n\nTo run: Menu -&gt; Internet -&gt; Transmission\n\nAlso see the Deluge app.\nNote: Torrents can contain illegal material, like pirated movies or cracked games. You use Transmission at your own risk.\n</code></pre>"},{"location":"apps-list/#web-apps","title":"Web Apps","text":"<p>https://itsfoss.com/web-app-manager-linux-mint/ - linuxmint for maintaining the application theofficialgman for packaging it for pi-apps ARM32/ARM64 - 5950 Users!</p> <pre><code>Run websites as if they were apps.\nThis is Linux Mint's official Web Apps program. Using it, you can run any website as a standalone app.\n\nIf there are multiple browsers installed on the system, Web Apps will let you choose which one to use. It also lets you select an icon, menu category, and text label. When finished, a new button will appear in the main menu.\n\nTo run: Menu -&gt; Internet -&gt; Web Apps\nTo run in a terminal: webapp-manager\n</code></pre>"},{"location":"apps-list/#xtreme-download-manager","title":"Xtreme Download Manager","text":"<p>https://xtremedownloadmanager.com ARM32/ARM64 - 4898 Users!</p> <pre><code>Xtreme Download Manager is a powerful tool to increase download speed up-to 500%, save and convert streaming videos from thousands of websites, resume broken/dead downloads and schedule downloads.\n\nXDM seamlessly integrates with Google Chrome, Mozilla Firefox Quantum, Opera, Vivaldi and many popular browsers, to take over downloads and saving streaming videos from web.\n\nXDM has built in video converter which lets you convert downloaded videos to popular MP4 and MP3 formats.\n\nSupport for HTTP, HTTPS, FTP, DASH, HLS, HDS protocols, firewalls, proxy servers, PAC scripts, file redirects, cookies, authorization, download queue, scheduler and many more feature makes XDM a very useful tool\n</code></pre>"},{"location":"apps-list/#internetbrowsers","title":"Internet/Browsers","text":""},{"location":"apps-list/#better-chromium","title":"Better Chromium","text":"<p>Botspot ARM32/ARM64 - 11660 Users!!</p> <pre><code>Make the most of your browser.\nThis is a collection of improvements for various aspects of Chromium.\nA window will appear with options. Feel free to pick and choose what you want, and uninstall this app to revert all changes.\nBe sure to close Chromium and re-launch it for the changes to take effect.\n\nFeatures:\n- Dark mode for user interface\n- Dark mode for all websites\n- Change UI scale (make everything larger)\n- Tab Previews (hover your mouse over a tab to see the page contents)\n- Google Chrome Sync\n- Widevine DRM support (for protected media like Netflix or Spotify)\n- Performance Improvements (Faster loading and scrolling)\n- Reduce writes to the SD card (Uses RAM for cache)\n\nWith the exception of Widevine, this script simply adds files to the /etc/chromium.d folder, most of which will add command-line flags to Chromium as it launches. Feel free to inspect the script to see how each of these features works.\n</code></pre>"},{"location":"apps-list/#brave","title":"Brave","text":"<p>https://brave.com/ - brave browser developers and google ARM64 ONLY - 515 Users</p> <pre><code>The new Brave browser blocks ads and trackers that slow you down and invade your privacy.\nDiscover a new way of thinking about how the web can work.\n3x faster than Chrome. Better protection from Google and Big Tech.\n</code></pre>"},{"location":"apps-list/#browsh","title":"Browsh","text":"<p>https://www.brow.sh/ ARM32/ARM64 - 2443 Users!</p> <pre><code>The modern text-based terminal browser.\nBrowsh is a modern text-based browser for the terminal. It renders anything that a modern browser can; HTML5, CSS3, JS, video and even WebGL. Its main purpose is to be run on a remote server and accessed via SSH/Mosh or the in-browser HTML service in order to significantly reduce bandwidth and thus both increase browsing speeds and decrease bandwidth costs.\n\nTo run: Menu -&gt; Internet -&gt; Browsh\nTo run in a terminal: browsh\n\nNOTE: This will also install firefox-esr\n</code></pre>"},{"location":"apps-list/#chromium","title":"Chromium","text":"<p>Botspot Package app - 170864 Users!!</p> <pre><code>Open-source version of Google Chrome.\nIf you are using Raspberry Pi OS, this browser has been optimized by the Raspberry Pi Foundation to include hardware acceleration and other various performance improvements.\n\nTo play Netflix, Spotify, or other protected multimedia streams, see the Chromium Widevine app.\nTo install an older version of Chromium, see the Downgrade Chromium app.\nTo improve Chromium with features such as Google sync, dark mode, performance improvements, and reducing SD card writes, see the Better Chromium app.\n</code></pre>"},{"location":"apps-list/#downgrade-chromium","title":"Downgrade Chromium","text":"<p>https://www.raspberrypi.org/forums/viewtopic.php?f=63https://www.raspberrypi.org/forums/viewtopic.php?f=63&amp;t=308303t=308303 ARM32/ARM64 - 3975 Users!</p> <pre><code>Change Chromium versions easily.\nChromium 65, 72, 74, 78, 84, 86, 88, 92, and 95.\nUninstall the app to go back to the latest Chromium version available.\nBeware that downgrading Chromium versions can mess up your config folder. To be safe, this app makes a backup of Chromium's config folder. When uninstalling, you will have the opportunity to restore the backup config folder.\nUsing older browser versions can be a security risk, proceed with caution.\n\nAll deb files are downloaded from https://archive.raspberrypi.org/debian/pool/main/c/chromium-browser\n</code></pre>"},{"location":"apps-list/#epiphany","title":"Epiphany","text":"<p>https://gitlab.gnome.org/GNOME/epiphany - open-sorcerrer64 Package app - 4619 Users!</p> <pre><code>Epiphany is a lightweight web browser based on the WebKit rendering engine. It is also known as GNOME Web.\n\nEpiphany is the default web browser for GNOME desktop and elementary OS. Epiphany was the default web browser for Raspberry Pi OS (then, Raspbian) until 28th Sep 2016, when ditched for chromium. \n\nTo run: Menu  -&gt; Internet -&gt; Epiphany Web Browser\n</code></pre>"},{"location":"apps-list/#firefox-rapid-release","title":"Firefox Rapid Release","text":"<p>https://firefox.com - Scripts made by chunky-milk Added to Pi-Apps by Tejas Singh YT Original Web-Browser made by Mozilla Foundation. ARM32/ARM64 - 21547 Users!!</p> <pre><code>Latest stable Mozilla Firefox version available. (Downloaded from Ubuntu Repo)\nMozilla Firefox, is a free and open-source web browser developed by the Mozilla Foundation.\n\nTo run: Menu -&gt; Internet -&gt; Firefox Web Browser\nTo run in terminal: firefox\n</code></pre>"},{"location":"apps-list/#flow","title":"Flow","text":"<p>https://www.ekioh.com/flow-browser/ - Botspot ARM32/ARM64 - 1001 Users</p> <pre><code>High-performance browser built from the ground up without relying on Chromium.\nThis is a closed source web browser specifically designed for running on the Raspberry Pi platform. It makes extensive usage of the GPU, and it outperforms many faster computers on the same benchmark.\n\nThis is a preview version, and you are bound to find places where it does not work well. Javascript support is still buggy, and other features are missing. But when Flow Browser works, the result is impressive.\n\nTo run: Menu -&gt; Internet -&gt; Flow Browser\nTo run in a terminal: flow\n</code></pre>"},{"location":"apps-list/#min","title":"Min","text":"<p>https://minbrowser.org/ - @ryanfortner (GitHub) ARM32/ARM64 - 2555 Users!</p> <pre><code>A fast, minimal browser that protects your privacy.\n\nTo run: Menu -&gt; Internet -&gt; Min\nTo run in terminal: min\n</code></pre>"},{"location":"apps-list/#pale-moon","title":"Pale Moon","text":"<p>https://www.palemoon.org/ - Botspot ARM32/ARM64 - 1673 Users!</p> <pre><code>A distant fork of Firefox, this is a lightweight and customizable web browser.\nPale Moon offers you a browsing experience in a browser completely built\nfrom its own, independently developed source that has been forked off from\nMozilla's code a number of years ago, with carefully selected\nfeatures and optimizations to improve the browser's stability and user\nexperience, while offering full customization and a growing collection of\nextensions and themes to make the browser truly your own.\n\nTo run: Menu -&gt; Internet -&gt; Pale Moon\nTo run in terminal: palemoon\n</code></pre>"},{"location":"apps-list/#puffin","title":"Puffin","text":"<p>https://www.puffin.com/raspberry-pi/ - Botspot added this app to Pi-Apps. ARM32/ARM64 - 7775 Users!</p> <pre><code>Speeds up web browsing thanks to cloud servers.\nThis web browser uses cloud servers to load websites for you, instead of making your Pi do it all.\nResult: a claimed 1600% browsing speed increase.\n\nTo run: Menu -&gt; Internet -&gt; Puffin Internet Terminal (Demo)\nTo run in a terminal: puffin-internet-terminal-demo\n</code></pre>"},{"location":"apps-list/#quartz","title":"Quartz","text":"<p>https://github.com/ksharindam/quartz-browser-qt5 ARM32/ARM64 - 943 Users</p> <pre><code>A useful fast Web Browser for Windows and Linux written in pyqt5 webkit.\n\nThis browser is aimed at ease of use, faster page loading, very short startup time.\n\nThis has minimal settings to avoid confusion.Yet it has most useful settings, such as load images on/off, javascript on/off, change font.\n\nTo save pages to read later, print feature can be used to save as pdf. And it can also export the whole page as png image.\n</code></pre>"},{"location":"apps-list/#tor","title":"Tor","text":"<p>https://sourceforge.net/projects/tor-browser-ports/files/ ARM32/ARM64 - 15623 Users!!</p> <pre><code>The Tor Browser is a web broswer that anonymizes your web traffic using the Tor network, making it easy to protect your identity online.\n</code></pre>"},{"location":"apps-list/#vivaldi","title":"Vivaldi","text":"<p>https://vivaldi.com - Big thanks to chunky-milk for app idea and install script: https://github.com/chunky-milk/pi-bashscripts-files/tree/main/vivaldi</p> <p>Icon, description, and everything else required by pi-apps by Itai-Nelken ARM32/ARM64 - 7041 Users!</p> <pre><code>Fast, private browser with unique features.\n\nOfficial Vivaldi browser for ARM Linux.\n</code></pre>"},{"location":"apps-list/#internetcommunication","title":"Internet/Communication","text":""},{"location":"apps-list/#armcord","title":"ArmCord","text":"<p>https://github.com/ArmCord/ArmCord - @ryanfortner (GitHub) ARM32/ARM64 - 1230 Users</p> <pre><code>ArmCord is a custom client designed to enhance your Discord experience while keeping everything lightweight.\n\nRun from the Menu &gt; Internet &gt; ArmCord, or simply run `armcord` in a terminal.\n</code></pre>"},{"location":"apps-list/#caprine","title":"Caprine","text":"<p>https://sindresorhus.com/caprine/ ARM32/ARM64 - 1837 Users!</p> <pre><code>Caprine is an unofficial and privacy focused Facebook Messenger app with many useful features. \nBuilt with Electron, Caprine features a Dark mode, keyboard shortcuts, ability to toggle last seen/typing indicators, work chat support, code blocks, custom text size, and an interface that adapts to resizing windows.\n\nCaprine is a third-party app and is not affiliated with Facebook. \n</code></pre>"},{"location":"apps-list/#cawbird","title":"Cawbird","text":"<p>https://ibboard.co.uk/cawbird/ - IBBoard for continuously developing Cawbird. ARM32/ARM64 - 474 Users</p> <pre><code>Cawbird is a fork of the Corebird GTK Twitter client that continues to work with Twitter.\n\nCawbird works with the new APIs and includes a few fixes and modifications that have historically been patched in to IBBoard's custom Corebird build on his personal Open Build Service account.\n</code></pre>"},{"location":"apps-list/#email-checker","title":"Email Checker","text":"<p>https://github.com/Botspot/raspi-email-checker ARM32/ARM64 - 1844 Users!</p> <pre><code>Continuously checks for new emails and display a notification if there are any.\nWhen you click install, a window will appear for you to enter the email account's information and the time interval to check.\nIf you want to change the settings later, just click the Install button again.\nOriginally adapted from: https://learn.adafruit.com/raspberry-pi-e-mail-notifier-using-leds/python-script\n</code></pre>"},{"location":"apps-list/#microsoft-teams","title":"Microsoft Teams","text":"<p>https://github.com/IsmaelMartinez/teams-for-linux - @IsmaelMartinez on GitHub for the creation of the app. ARM32/ARM64 - 3928 Users!</p> <pre><code>Microsoft Teams is a proprietary business communication platform developed by Microsoft, as part of the Microsoft 365 family of products. \nTeams primarily competes with the similar service Slack, offering workspace chat and videoconferencing, file storage, and application integration. \n\nTo run: Menu -&gt; Internet -&gt; Teams\n\nBuild with nativefier. \n</code></pre>"},{"location":"apps-list/#telegram","title":"Telegram","text":"<p>https://github.com/telegramdesktop/tdesktop ARM64 ONLY - 5876 Users!</p> <pre><code>Telegram is a free and open source, cross-platform, cloud-based instant messaging software. This service also provides end-to-end encrypted video calling, VoIP, file sharing and several other features. \n\nTo run: Menu -&gt; Internet -&gt; Telegram Desktop\nTo run from terminal: flatpak run org.telegram.desktop\n</code></pre>"},{"location":"apps-list/#thunderbird","title":"Thunderbird","text":"<p>https://www.thunderbird.net/features - Botspot Package app - 15284 Users!!</p> <pre><code>Email client with many features like a tabbed interface, smart spam filter, address book, search and filter tools, encryption, and numerous add-ons.\nTo run: Menu -&gt; Internet -&gt; Thunderbird\nTo run in a terminal: thunderbird\n</code></pre>"},{"location":"apps-list/#webcord","title":"Webcord","text":"<p>https://github.com/SpacingBat3/WebCord/ - Discord app by SpacingBat3 ARM32/ARM64 - 35303 Users!!</p> <pre><code>Fast Discord client for ARM that mimics the official Discord client.\nThe app runs independent to chromium and can be hidden to the system tray unlike other solutions out there.\nTo run: Menu -&gt; Internet -&gt; WebCord.\nTo run in a terminal: webcord\nThis client is not officially provided or supported by Discord and technically violates ToS, use at your own risk\nMade by SpacingBat3 on Github with care :)\n</code></pre>"},{"location":"apps-list/#wechat","title":"Wechat","text":"<p>https://www.wechat.com/en/ - Install script written by RaspberryPiNews on YT With help from chills340 on Discord Script edits made by Botspot. Botspot was unable to login and test everything though. ARM32 ONLY - 605 Users</p> <pre><code>WeChat is a Chinese multi-purpose instant messaging, social media and mobile payment app developed by Tencent. \n\nIt was first released in 2011, it became the world's largest standalone mobile app in 2018, with over 1 billion monthly active users.\nWeChat provides text messaging, hold-to-talk voice messaging, broadcast (one-to-many) messaging, video conferencing, video games, sharing of photographs and videos and location sharing.\n\nWeChat Desktop App:\n- Run with box86 and wine\n- Smooth performance\n- Everything from gifs to emojis to images all work\n\nTo run: Menu -&gt; Internet -&gt; WeChat\n</code></pre>"},{"location":"apps-list/#whatsapp","title":"WhatsApp","text":"<p>no website - Apps compiled using Nativefier and DEB packages hosted by cycool29 Nativefier made by jiahaog. Thanks to Botspot for help with debugging the menu shortcut and for creating pi-apps! ARM32/ARM64 - 7513 Users!</p> <pre><code>Nativefier Whatsapp Web webapp\n\nA simple Whatsapp Web chromium webapp wrapped in electron with nativefier.\nit has a tray icon, so it doesn't take space on the taskbar, but keeps running in the background.\n\nTo run:\nmenu&gt;internet&gt;Whatsapp Web\n</code></pre>"},{"location":"apps-list/#zoom","title":"Zoom","text":"<p>https://github.com/Botspot/pi-apps/issues/188 ARM32/ARM64 - 19593 Users!!</p> <pre><code>Zoom video calls on the Raspberry Pi.\nThis is the full desktop app, so you can do virtual backgrounds and Gallery View!\nThis works by running the 32-bit x86 Zoom Linux app inside the box86 emulator.\nPerformance is good enough on the Pi4. Turning off HD video in Zoom's settings is recommended.\n\nTo run: Menu -&gt; Internet -&gt; Zoom\nTo run in a terminal: ~/zoom/runzoom.sh\n</code></pre>"},{"location":"apps-list/#zoom-pwa","title":"Zoom PWA","text":"<p>https://github.com/Botspot/zoom-pwa - Botspot ARM32/ARM64 - 1620 Users!</p> <pre><code>Web-app for Zoom\nThis is basically a web browser running Zoom's new Progressive Web App. Performance is better in some ways and worse in others.\nThis app should be considered a backup option, only used if the regular Zoom app doesn't work at all.\nBoth versions can be installed at the same time and will not interfere with each another.\n\nNote: this app requires you to have chromium-browser, chromium, or google-chrome installed. Let us know if your Chromium-based browser is not detected by the script.\n\nTo run: Menu -&gt; Internet -&gt; Zoom PWA\nTo run in a terminal: cat ~/.local/share/applications/chrome-gbmplfifepjenigdepeahbecfkcalfhg-Zoom-PWA.desktop | grep Exec | sed 's/Exec=//g' | bash\n</code></pre>"},{"location":"apps-list/#multimedia","title":"Multimedia","text":""},{"location":"apps-list/#audacious","title":"Audacious","text":"<p>https://audacious-media-player.org/ - Botspot Package app - 20631 Users!!</p> <pre><code>Lightweight but flexible audio player\nThis is a playlist-style audio player, allowing you to drag folders and files to the list. It includes numerous audio effects, visualizations, and skins - even several Winamp ones!\nTo run: Menu -&gt; Sound &amp; Video -&gt; Audacious\nTo run in a terminal: audacious\n</code></pre>"},{"location":"apps-list/#audacity","title":"Audacity","text":"<p>https://www.audacityteam.org/ - Botspot Package app - 9995 Users!</p> <pre><code>Easy-to-use audio editor with numerous features\nSupports live-recording, import/export, editing, effects, plugins, visualizations, keyboard shurtcuts, and much more.\nTo run: Menu -&gt; Sound &amp; Video -&gt; Audacity\nTo run in a terminal: audacity\nAlso see MuseScore2 and Sonic-Pi\n</code></pre>"},{"location":"apps-list/#bongo-cam","title":"Bongo Cam","text":"<p>https://github.com/kuroni/bongocat-osu - Install code made by Raspberry Pi News on Youtube Original app made by kuromi: https://github.com/kuroni/bongocat-osu ARM32 ONLY - 2641 Users!</p> <pre><code>If you want to make a video but don't want to show your face, why not use this animated cat program?\nThis app displays a cat. It can type on the keyboard or move the mouse. It mirrors your mouse movements.\n\nDefault keyboard shortcuts: Z and X to tap on the keyboard, C to wear sunglasses, and V to wave.\n\nGo here for configuration options: https://github.com/kuroni/bongocat-osu/wiki/Settings\nNOTE: The app files are stored in ~/bongocam/\n</code></pre>"},{"location":"apps-list/#chromium-widevine","title":"Chromium Widevine","text":"<p>https://github.com/Botspot/chromium-v84-widevine ARM32 ONLY - 17124 Users!!</p> <pre><code>Widevine DRM support for any version of chromium-browser.\nThis adds ChromeOS's Widevine video decoding library to Chromium, and creates a second menu button with a ChromeOS user-agent. All websites will think your Pi is a Chromebook!\nUnlike Ventz's Chromium Media Edition, or even the official libwidevinecdm0 package, this app is unique to support all versions of Chromium, before version 84 and after version 84. Feel free to downgrade your browser for better video performance! (Using the \"Downgrade Chromium\" app)\n\nTo run: Menu -&gt; Internet -&gt; Chromium Widevine.\nTo test DRM: https://bitmovin.com/demos/drm\nFor normal browsing, it's advisable to use the standard Chromium launcher.\n\nThis is known to work on these websites:\n\u2022 Netflix\n\u2022 Hulu\n\u2022 Amazon Prime\n\u2022 Disney+\n\u2022 HBO\n\u2022 Spotify\n\u2022 Pandora\n\u2022 Hoopla\n\u2022 MUBI\n\u2022 BritBox\n\u2022 Bell Satellite TV\n</code></pre>"},{"location":"apps-list/#freetube","title":"FreeTube","text":"<p>https://freetubeapp.io/ - Installation Script and added to Pi-Apps by RPICoder ARM32/ARM64 - 13941 Users!!</p> <pre><code>Privacy-friendly YouTube player.\nUse YouTube without advertisements and prevent Google from tracking you with their cookies and JavaScript.\n\nFreeTube has an interface similar to YouTube, but is slower and more innefficient than YouTubuddy. Try both and see which one you prefer!\nDisabling the compositor improves playback performance.\n</code></pre>"},{"location":"apps-list/#kodi","title":"Kodi","text":"<p>https://kodi.tv/about - Botspot ARM32/ARM64 - 8671 Users!</p> <pre><code>Kodi is the ultimate entertainment center.\nKodi excels at:\n- Movies\n- TV Shows\n- Music\n- Photos\n- Games\n- Skins and add-ons\n- Controllable with mouse, keyboard, web interface, smartphone apps, game controllers, and TV remotes\n\nTo run: Menu -&gt; Sound &amp; Video -&gt; Kodi\nTo run in a terminal: kodi\n\nTo make this run on startup, consider using the Autostar app.\n</code></pre>"},{"location":"apps-list/#lmms","title":"LMMS","text":"<p>https://lmms.io - Thanks to:  - the LMMS community for developing LMMS  - @Crilum on GitHub for adding LMMS to Pi-Apps  Package app - 2008 Users!</p> <pre><code>LMMS (Let\u2019s Make Music) is a free, open-source and cross-platform software for making music on your computer, made by musicians, for musicians. It comes with a user-friendly and modern interface.\n\nLMMS also comes with playback instruments, samples, and plugins. It is bundled with ready-to-use content such as a collection of instrument and effect plugins, presets and samples to VST and SoundFont support.\n\nFeatures:\n - Compose music on Windows, Linux and macOS\n - Sequence, compose, mix and automate songs in one simple interface\n - Note playback via MIDI or typing keyboard\n - Consolidate instrument tracks using Beat+Bassline Editor\n - Fine tune patterns, notes, chords and melodies using Piano Roll Editor\n - Full user-defined track-based automation and computer-controlled automation sources\n - Import of MIDI files and Hydrogen project files\n</code></pre>"},{"location":"apps-list/#musescore","title":"MuseScore","text":"<p>https://musescore.org - Botspot theofficialgman for appimages ARM32/ARM64 - 1571 Users!</p> <pre><code>Professional music notation software - LATEST MuseScore 4!\nTo run: Menu -&gt; Sound &amp; Video -&gt; MuseScore 4\nTo run in terminal: mscore\n</code></pre>"},{"location":"apps-list/#obs-studio","title":"OBS Studio","text":"<p>https://obsproject.com/ - Install script made by Botspot and RPICoder :) ARM32/ARM64 - 17729 Users!!</p> <pre><code>Free and open source software for video recording and live streaming.\n\nTo run: Menu -&gt; Sound &amp; Video -&gt; OBS Studio\nTo run in a terminal: obs\n</code></pre>"},{"location":"apps-list/#reaper","title":"Reaper","text":"<p>https://reaper.fm - Thanks to @Crilum on GitHub for adding this app to Pi-Apps ARM32/ARM64 - 926 Users</p> <pre><code>REAPER is a complete digital audio production application for computers, offering a full multitrack audio and MIDI recording, editing, processing, mixing and mastering toolset.\nREAPER supports a vast range of hardware, digital formats and plugins, and can be comprehensively extended, scripted and modified.\n\nREAPER's full, flexible feature set and renowned stability have found a home wherever digital audio is used: commercial and home studios, broadcast, location recording, education, science and research, sound design, game development, and more.\n\nFrom mission-critical professional environments to students' laptops, there is a single version of REAPER, fully featured with no artificial limitations. You can evaluate REAPER in full for 60 days. A REAPER license is affordably priced and DRM-free.\n\nThis is a free 60-day trial of Reaper (Nothing disabled).\nThis app installs Reaper, as well as ReaPack, the (unofficial) Reaper Package Manager, with over 1300 Plugins/Extentions available.\n\nTo run from Teminal: reaper\nTo run from Menu: Menu -&gt; Sound and Video -&gt; Reaper \nTo run ReaPack: Open Reaper, go to the \"Extentions\" menu, and hover over the \"ReaPack\" item.\n</code></pre>"},{"location":"apps-list/#renoise-demo","title":"Renoise (Demo)","text":"<p>https://renoise.com - Thanks to:  - Renoise developer for making Renoise, and providing Raspberry Pi builds!  - @Crilum on GitHub for adding teh app to Pi-Apps ARM32/ARM64 - 209 Users</p> <pre><code>Renoise is a cross-platform Digital Audio Workstation with a unique top-down approach to music composition known as a tracker interface.\n\nAlready known to be a very feature-complete software, version 3 improves on core features such as the native sampler and instrument. \n\nThis version is only a demo, you can buy the full version at: https://www.renoise.com/shop\nRenoise Demo Restrictions\n\n \u00b7 No ASIO support on Windows\n \u00b7 Rendering to .wav is disabled\n \u00b7 Rendering/resampling selections is disabled\n \u00b7 Rendering/freezing plugin instruments to samples is disabled\n \u00b7 Nag screens\n \u00b7 As ReWire Master, only the first stereo input bus will be available\n \u00b7 As ReWire Slave, Renoise will occasionally generate a small subtle hiss\n\n\nTo Run from Menu: Menu -&gt; Sound and Video -&gt; Renoise\nTo run in Terminal: renoise\n</code></pre>"},{"location":"apps-list/#simplescreenrecorder","title":"SimpleScreenRecorder","text":"<p>https://www.maartenbaert.be/simplescreenrecorder/ - App Made by: MaartenBaert Suggestion from Kolpix Package app - 4955 Users!</p> <pre><code>Feature-rich screen recorder for X11 and OpenGL\nSimple Screen Recorder is, despite its name, an actually feature-rich screen recorder. The name reflects the fact that it is simple to use unlike many other free screen recording applications available. It can be easily configured to start recording from an intuitive wizard-like interface.\n\nIt can record the entire screen or part of it directly.  The recording can be paused and resumed at any time. Many different file formats and codecs are supported. To perform an X11 recording, all it takes is selecting an area on the root window with the mouse, choosing an output file and pressing record, either by using the mouse or using a hotkey.\n\nIt has a Qt-based graphical user interface.\n\nIts complexity becomes apparent in its powerful features. It allows one to record X11 screen areas and fullscreen OpenGL applications including sound supporting both ALSA, PulseAudio, JACK and OSS. It uses libavformat to encode the recorded material into a variety of video formats. Scaling the recorded video is possible as well as configuring the encoding quality for the codec chosen directly from the user interface.\n</code></pre>"},{"location":"apps-list/#sonic-pi","title":"Sonic Pi","text":"<p>https://sonic-pi.net/#rp ARM32/ARM64 - 1402 Users</p> <pre><code>Write code to make music. Latest version of Sonic Pi.\n\nTo run: Menu -&gt; Programming -&gt; Sonic Pi\nTo run in a terminal: sonic-pi\n</code></pre>"},{"location":"apps-list/#wacup-new-winamp","title":"WACUP (new WinAmp)","text":"<p>https://getwacup.com/ - Botspot for the scripts ralf1307 (github) issue #192 for the suggestion. ARM32 ONLY - 2416 Users!</p> <pre><code>Cross-platform audio player - emulated Windows app\n</code></pre>"},{"location":"apps-list/#waveform","title":"Waveform","text":"<p>https://tracktion.com/products/waveform-free - Thanks to @Crilum on GitHub for adding this app to Pi-Apps! ARM32/ARM64 - 500 Users</p> <pre><code>Waveform is a proprietary Digital Audio Workstation specializing in creative and inspirational workflows.\n\nWaveform is a rapidly evolving application specifically designed for the needs of modern music producers. Specializing in creative and inspirational workflows and avoiding features not explicitly needed allow the app to remain surprisingly fun and intuitive.\n\nThis is a 90-day free trial of Waveform, but you can get a free licence by creating an account at https://www.tracktion.com/welcome/waveform-free. Once you have an account, you can use it to activate Waveform.\nThis app will also work with Pro licenses.\n\nTo run from Menu: Menu -&gt; Sound and Video -&gt; Waveform 11\nTo run from Terminal: Waveform11\n</code></pre>"},{"location":"apps-list/#youtubuddy","title":"YouTubuddy","text":"<p>https://github.com/Botspot/youtubuddy - Botspot added this to Pi-Apps. ARM32/ARM64 - 15736 Users!!</p> <pre><code>Simple YouTube search engine, downloader and player.\n- No web browser required! Easily search for videos and play them with a few clicks.\n- Extremely lightweight - one bash script.\n- Perfect for downloading/playing batches of videos with a few clicks.\n- Supports searches, playlist URLs, and direct YouTube links. In addition, this supports URLs to many other video sites for easy downloading.\n</code></pre>"},{"location":"apps-list/#office","title":"Office","text":""},{"location":"apps-list/#abiword","title":"AbiWord","text":"<p>http://www.abisource.com/ -  open-sorcerer64 Package app - 2265 Users!</p> <pre><code>A free and open-source alternative to Microsoft Word.  \n\nAbiWord is a lightweight word processor compatible with a wide variety of file formats. It doesn't have all the bells and whistles of Microsoft Word or Libre Office's Writer, but it is more than enough for the average user.\nThe source code is available at https://gitlab.gnome.org/World/AbiWord\n\nNOTE: AbiWord uses .abw extension by default.\n\nTo run: Menu -&gt; Office -&gt; Abiword.\nTo run in terminal:  abiword.\n</code></pre>"},{"location":"apps-list/#libreoffice-ms-theme","title":"Libreoffice MS theme","text":"<p>https://github.com/Botspot/libreoffice-ms-theme - Botspot made this script and theme. ARM32/ARM64 - 7212 Users!</p> <pre><code>Make Libreoffice to look like Microsoft office - icon theme and tabbed interface.\nThe icon theme was obtained from here: https://www.deviantart.com/charliecnr/art/Office-2013-theme-for-LibreOffice-512127527\nAnd the tabbed interface is a hidden feature within Libreoffice.\nCurrently, the tabbed interface works for Calc, Impress, and Writer. Base and Math don't support it, and it doesn't display correctly on Draw for some reason.\n</code></pre>"},{"location":"apps-list/#libreoffice","title":"LibreOffice","text":"<p>https://www.libreoffice.org - Botspot Package app - 72755 Users!!</p> <pre><code>Free office suite including a word editor, slideshow, spreadsheet, database, and image editor\nTo run: Menu -&gt; Office -&gt; LibreOffice\nTo run in terminal: libreoffice\nTo make it look and feel like Microsoft Office, see the \"Libreoffice MS Theme\" app!\n</code></pre>"},{"location":"apps-list/#nixnote2","title":"NixNote2","text":"<p>https://github.com/baumgarr/Nixnote2 - Botspot Package app - 1350 Users</p> <pre><code>Take notes, organize your schedule, and save websites with this offline and open-source Evernote client.\nTo run: Menu -&gt; Internet -&gt; NixNote2\nTo run in a terminal: nixnote2\n</code></pre>"},{"location":"apps-list/#notejot","title":"Notejot","text":"<p>https://github.com/lainsce/notejot - Thanks to:  - @lainsce on GitHub for creating the app!  - @Crilum on GitHub for adding this app to Pi-Apps ARM64 ONLY - 445 Users</p> <pre><code>A minimalist note-taking app with Markdown support\n\nRun from Menu: Menu -&gt; Accessories -&gt; Notejot\nRun from Terminal: flatpak run io.github.lainsce.Notejot\n</code></pre>"},{"location":"apps-list/#wps-office","title":"WPS Office","text":"<p>https://www.wps.com - Botspot figured out how to install WPS Office on PiOS64. (dependency handling) Botspot figured out how to install WPS Office on PiOS32. (chroot setup) ARM32/ARM64 - 3205 Users!</p> <pre><code>This is a Chinese clone of Microsoft Office.\nIt includes Word, Excel, PowerPoint, a PDF viewer, and a web browser. It appears to be free software and you don't need to create an account to use it.\nCompared to LibreOffice, WPS Office runs faster, looks better, and seems to be more stable.\n\nThis script will prevent the program from connecting to the Internet, just in case it contains telemetry or spyware.\n\nTo run: Menu -&gt; Office -&gt; WPS Office\nTo run in a terminal: it depends! Please read the information below.\n\nThis app installs differently, depending on if you are using a 32-bit OS or a 64-bit OS.\nIf you are using a 32-bit OS:\n- You will have to enable the 64-bit kernel. Don't worry, enabling it will not harm your OS - you probably won't even notice.\n- A 64-bit Debian Bullseye chroot will be created. (/opt/wps-office-chroot)\n- The total installation will take 2.1GB of space.\n- To run in a terminal: schroot -c wps-office-chroot -- wps\n- If you trust WPS Office and want to use its Internet features, then run this command: sudo cp /etc/resolv.conf /opt/wps-office-chroot/etc/resolv.conf\n\nIf you are using a 64-bit OS:\n- WPS will be directly installed with apt.\n- The total installation will take 1.3GB of space.\n- To run in a terminal: wps\n- If you trust WPS Office and want to use its Internet features, edit the menu button and get rid of the \"firejail --net=none\" part.\n</code></pre>"},{"location":"apps-list/#programming","title":"Programming","text":""},{"location":"apps-list/#arduino","title":"Arduino","text":"<p>https://www.arduino.cc/en/main/software ARM32/ARM64 - 17034 Users!!</p> <pre><code>Arduino IDE 1.8.X. Now called Arduino IDE Legacy, based on the Java and Python Frameworks.\nArduino IDE 2.X has not been released for ARMhf/ARM64 Linux, based on the Electron and Javascript/Typescript Frameworks.\n\nUse this to flash your code to Arduino microprocessors.\nTo run: Menu -&gt; Programming -&gt; Arduino IDE.\nTo run in a terminal: arduino\n</code></pre>"},{"location":"apps-list/#blockpi","title":"BlockPi","text":"<p>https://github.com/alienzhangyw/BlockPi - Botspot made the app's install scripts ARM32/ARM64 - 4222 Users!</p> <pre><code>Create python programs using drag-n-drop blocks\nA visual programming editor app for Raspberry Pi, built on Google Blockly, made for RPi users or kids to learn coding.\n\nTo run: Menu -&gt; Programming -&gt; BlockPi\nTo run in a terminal: /opt/BlockPi/blockpi\n</code></pre>"},{"location":"apps-list/#bluej-java-ide","title":"BlueJ Java IDE","text":"<p>https://bluej.org - open-sorcerer64 Package app - 25807 Users!!</p> <pre><code>A simple but powerful Java IDE.\n\nBlueJ is an integrated development environment for the Java programming language, developed mainly for educational purposes.\n\nTo run: Menu -&gt; Programming -&gt; BlueJ Java IDE\n</code></pre>"},{"location":"apps-list/#codex","title":"Codex","text":"<p>https://github.com/jcv8000/Codex ARM32/ARM64 - 1382 Users</p> <pre><code>A free note-taking software for programmers and Computer Science students.\n\nTo run: Menu -&gt; Accessories -&gt; Codex\n</code></pre>"},{"location":"apps-list/#electron-fiddle","title":"Electron Fiddle","text":"<p>https://www.electronjs.org/fiddle - Thanks to:  - All contributers to Electron, and Electron Fiddle.  - Crilum on GitHub for making the scripts. ARM32/ARM64 - 567 Users</p> <pre><code>Electron Fiddle lets you create and play with small Electron experiments. \n\nIt greets you with a quick-start template after opening \u2013 change a few things, choose the version of Electron you want to run it with, and play around.\nThen, save your Fiddle either as a GitHub Gist or to a local folder.\nOnce pushed to GitHub, anyone can quickly try your Fiddle out by just entering it in the address bar.\n\nRun from menu: Menu -&gt; Accesories -&gt; Electron Fiddle\nRun from Terminal: electron-fiddle\n</code></pre>"},{"location":"apps-list/#github-cli","title":"Github-CLI","text":"<p>https://cli.github.com/ - Added to pi-apps by Itai-Nelken ARM32/ARM64 - 5198 Users!</p> <pre><code>gh is GitHub on the command line.\nIt brings pull requests, issues, and other GitHub concepts to the terminal next to where you are already working with git and your code.\n\nto run (terminal only): gh\n</code></pre>"},{"location":"apps-list/#github-desktop","title":"Github Desktop","text":"<p>https://desktop.github.com/ - Added to pi-apps and compiled by theofficialgman ARM32/ARM64 - 2833 Users!</p> <pre><code>Github Desktop is a GUI git client.\nFocus on what matters instead of fighting with Git. Whether you're new to Git or a seasoned user, GitHub Desktop simplifies your development workflow.\n\nRun from Menu: Menu -&gt; Accessories -&gt; Github Desktop\nRun from Terminal: github-desktop\n</code></pre>"},{"location":"apps-list/#gnome-builder-ide","title":"Gnome Builder IDE","text":"<p>https://wiki.gnome.org/Apps/Builder ARM64 ONLY - 39 Users</p> <pre><code>Builder is an actively developed Integrated Development Environment for GNOME.\nIt combines integrated support for essential GNOME technologies such as GTK+, GLib, and GNOME APIs with features that any developer will appreciate, like syntax highlighting and snippets.\n\nYou can rely on predictable releases of Builder with each new release of GNOME every six months.\n</code></pre>"},{"location":"apps-list/#intellij-idea","title":"Intellij IDEA","text":"<p>https://www.jetbrains.com/idea/ - Thanks to GlacierPark19 for suggesting this app be added. Botspot made it. ARM32/ARM64 - 3071 Users!</p> <pre><code>IntelliJ IDEA is an IDE designed to maximize developer productivity.\nIt does the routine and repetitive tasks for you by providing clever code completion, static code analysis, and refactorings, and lets you focus on the bright side of software development, making it not only productive but also an enjoyable experience.\n</code></pre>"},{"location":"apps-list/#jgrasp-ide","title":"jGRASP IDE","text":"<p>https://www.jgrasp.org/index.html - Botspot made this app. ARM32/ARM64 - 913 Users</p> <pre><code>An IDE with visualizations for improving software comprehensibility.\nThis IDE is used by many learning institutions and colleges for their classes.\n</code></pre>"},{"location":"apps-list/#mu","title":"Mu","text":"<p>https://codewith.mu/ - Botspot Package app - 18757 Users!!</p> <pre><code>A simple Python editor for beginner programmers.\nThis is probably the simplest Python code editor available, with an intuitive UI designed to make sense on first run. Mu is the recommended Python IDE by the Raspberry Pi Foundation.\n</code></pre>"},{"location":"apps-list/#notepad","title":"Notepad ++","text":"<p>https://notepad-plus-plus.org/ - App added to pi-apps by RPICoder ARM32 ONLY - 8449 Users!</p> <pre><code>Notepad++ is a free source code editor and Notepad replacement that supports several languages. \nTo Run:  Menu -&gt; Accessories -&gt; Notepad++\n\nThis app runs with the help of box86 and wine.\n</code></pre>"},{"location":"apps-list/#processing-ide","title":"Processing IDE","text":"<p>https://processing.org/ - added by pi-dev500 updated by theofficialgman ARM32/ARM64 - 1417 Users</p> <pre><code>Simple Java IDE\nProcessing 4 is an IDE + Programming Language used for Visual Arts.\nIt is an Open-Source and Free Software (FOSS) which is built from Java and is used to create graphics.\n\nTo run: Menu -&gt; Programming -&gt; Processing IDE\nTo run in a terminal: ~/.local/share/processing-*/processing\n</code></pre>"},{"location":"apps-list/#pycharm-ce","title":"Pycharm CE","text":"<p>https://www.jetbrains.com/pycharm/ - Thanks to gam3t3chelectronicshobbyhouse a.k.a 'Gam3t3ch' for \"Installing PyCharm on Raspberry Pi 4\" from element14. Also, fabianmendes for introducing it into pi-apps. ARM32/ARM64 - 8297 Users!</p> <pre><code>Python Community Edition IDE for Professional and Educational Developers.\nTo run: Menu -&gt; Programming -&gt; Pycharm Community Edition\nTo run in a terminal: /opt/pycharm-community/bin/pycharm.sh\n\nYou must configure the IDE to run each script (\"py\" file), or create a new environment.\nFor Educational purposes, the \"EDUtools\" plugin can be installed. Go to the right corner from the Pycharm start up portal: Configurate &gt; Plugins &gt; Search for: EDUtools &gt; Install it and restart the IDE. Then you will able to select \"Learn and Teach\" for courses.\n</code></pre>"},{"location":"apps-list/#remarkable","title":"Remarkable","text":"<p>https://remarkableapp.github.io - Added to Pi-Apps by Itai-Nelken. Thanks to seiferteric on GitHub for providing the DEB package fix. ARM32/ARM64 - 1480 Users</p> <pre><code>A fully featured Markdown editor for Linux.\nRemarkable has many features including:\n- Live Preview with Synchronized Scrolling\n- Syntax Highlighting\n- GitHub Flavored Markdown Support\n- HTML and PDF Export\n- Dialogs for adding images, links and tables\n- Styles\n- Custom CSS Support\n- Keyboard Shortcuts\n</code></pre>"},{"location":"apps-list/#scratch-2","title":"Scratch 2","text":"<p>https://github.com/Botspot/scratch2 - Botspot ARM32 ONLY - 2464 Users!</p> <pre><code>Scratch 2 was removed from RPiOS in January. Install it back with this app!\nScratch 2 is significantly faster than Scratch 3. It uses far less CPU, and generally will run better than Scratch 3 on older Pies.\nTo run: Menu -&gt; Programming -&gt; Scratch 2.\nTo run in a terminal: scratch2\n</code></pre>"},{"location":"apps-list/#scratch-3","title":"Scratch 3","text":"<p>https://scratch.mit.edu - Botspot Package app - 37962 Users!!</p> <pre><code>Enjoy learning computer programming with drag-n-drop blocks!\nThis is Raspberry Pi's official electron build of Scratch 3 and it runs offline.\nTo run: Menu -&gt; Programming -&gt; Scratch 3\nTo run in a terminal: /usr/lib/scratch3/scratch-desktop\nNote: Consider trying Turbowarp or Scratch 2 - both run faster than this version.\n</code></pre>"},{"location":"apps-list/#sphero-sdk","title":"Sphero SDK","text":"<p>https://sdk.sphero.com - Sphero SDK maintainers zShqdows (GitHub) ryanfortner (GitHub) for some improvements ARM32/ARM64 - 169 Users</p> <pre><code>Software Development Kit for the Sphero RVR Robot\n\nThis app can be used with the Sphero RVR Robot to code IR sensors, color sensors, LEDS, and much more, even programming servo's, and robotics arms to pick up and move items to another location.\n\nTo run this app: Most of the Instructions are provided after install. \nMake sure to do - cd ~/sphero-sdk-raspberrypi-python/\n\n(BEFORE INSTALLATION: ENABLE SERIAL PORT, THEN DISABLE SERIAL CONSOLE IN RASPBERRY PI CONFIG)\n\nAfter reading the instructions, and rebooting, connecting to RVR is simple, using jumper wires, \nConnect GND from the Raspberry Pi to GND on RVR.\nConnect TX from the Raspberry Pi to RX on RVR.\nLastly, connect RX from the Raspberry Pi to TX on the RVR.\n\nThere you go! You are now ready to run your programs.\n</code></pre>"},{"location":"apps-list/#stackedit","title":"StackEdit","text":"<p>https://stackedit.io/ - Added to pi-apps by Itai-Nelken. webapps compiled by Itai-Nelken using nativefier. nativefier by jiahaog. ARM32/ARM64 - 999 Users</p> <pre><code>Full-featured, open-source Markdown editor.\nStackEdit uses the same markdown library as Stack Overflow and is fully compatible with Github README.md files as well.\nThis is Botspot's preferred tool to write the README for all his repositories.\nTo run: Menu -&gt; Programming -&gt; StackEdit\nTo run in a terminal: ~/stackedit/StackEdit\n</code></pre>"},{"location":"apps-list/#sublime-text","title":"Sublime Text","text":"<p>https://www.sublimetext.com/ - Added to pi-apps by Itai Nelken ARM32/ARM64 - 5702 Users!</p> <pre><code>Cross-platform source code editor with a Python application programming interface.\nIt natively supports many programming languages and markup languages. Additional features can be added with plugins.\n\nTo run: Menu -&gt; Programming -&gt; Sublime Text\n\nOn armhf based Operating Systems, this runs Sublime Text 2 with the Box86 emulator.\nHowever on arm64 based Operating Systems this runs the latest Sublime Text 4 without any emulation.\n</code></pre>"},{"location":"apps-list/#turbowarp","title":"Turbowarp","text":"<p>https://turbowarp.org/ - App added to pi-apps by Raspberry Pi News (bit.ly/rpnsite)</p> <p>Made by the TurboWarp dev team (https://github.com/TurboWarp/) ARM32/ARM64 - 2110 Users!</p> <pre><code>Scratch 3 Desktop, but runs much faster. Also known as 'TurboWarp'\nTurboWarp is a Scratch mod that compiles projects to JavaScript to make them run really fast. Also has dark mode, addons, and more. It even works when you're offline, just like the original Scratch Desktop.\n\nTo run: Menu -&gt; Programming -&gt; TurboWarp\n</code></pre>"},{"location":"apps-list/#visual-studio-code","title":"Visual Studio Code","text":"<p>https://code.visualstudio.com/ - Install script written by RaspberryPiNews on YT Small change to description by CleanMachine1 Original program made by Microsoft ARM32/ARM64 - 18234 Users!!</p> <pre><code>Visual Studio Code is a free source-code editor made by Microsoft.\nFeatures include support for debugging, syntax highlighting, intelligent code completion, snippets, code refactoring, and embedded Git\nIt supports most popular coding languages including Python, JavaScript, and more.\nNote: If you are using Raspberry Pi OS, you don't need to install this app. Just run \"sudo apt install code\" in the terminal. Pi-Apps will still continue to ship VSCode so that non-PiOS users can still have access to it.\n\n</code></pre>"},{"location":"apps-list/#vscodium","title":"VSCodium","text":"<p>https://vscodium.com/ - Added to pi-apps by @ryanfortner (Github) ARM32/ARM64 - 3078 Users!</p> <pre><code>Visual Studio Code builds without the telemetry and tracking.\nMicrosoft's vscode source code is open source (MIT-licensed), but the product available for download (Visual Studio Code) is licensed under this not-FLOSS license and contains telemetry/tracking.\n</code></pre>"},{"location":"apps-list/#system-management","title":"System Management","text":""},{"location":"apps-list/#all-is-well","title":"All Is Well","text":"<p>https://github.com/spectrumgamer75/All-is-well ARM32/ARM64 - 16493 Users!!</p> <pre><code>ALL IS WELL is a bash script that allows users to easily update and upgrade their repositories and packages on linux.\nIt will also fix any broken packages and dependencies. Forget about typing all update/upgrade commands  manually, when ALL IS WELL!\n</code></pre>"},{"location":"apps-list/#autostar","title":"Autostar","text":"<p>https://github.com/Botspot/autostar - Botspot made, Botspot added. ARM32/ARM64 - 5748 Users!</p> <pre><code>Simple utility to make programs run on boot. The sky's the limit.\nPeople use this to:\n- Launch a website automatically, on boot.\n- Start a backup.\n- Launch your favorite apps on boot so they are ready to use sooner.\n- See what other apps have added autostart entries, and customize/disable them.\n\nTo run: Menu -&gt; Preferences -&gt; AutoStar\nTo run in terminal: ~/autostar/main.sh\n</code></pre>"},{"location":"apps-list/#bleachbit","title":"BleachBit","text":"<p>https://www.bleachbit.org/ ARM32/ARM64 - 5716 Users!</p> <pre><code>BleachBit is a free and open-source disk space cleaner, privacy manager, and computer system optimizer. Not outdated like the APT repo's BleachBit.\n\nLike CCleaner on Windows, BleachBit frees space by deleting unimportant files and helps maintain your privacy by deleting sensitive data. \nAnd, just like CCleaner, there\u2019s more you can do with BleachBit than just clicking a single button.\n\nBetter than free, BleachBit is open source.\n\nComparison to APT version:\n- Nicer GUI look\n- With Abort function\n- With many function not included in APT version (Shred path from clipboard,make chaff and etc)\n- Clean deeper\n- Official dark theme support\n- Support showing debug messages\n</code></pre>"},{"location":"apps-list/#btop","title":"btop++","text":"<p>https://github.com/aristocratos/btop - Thanks to:  - aristocratos and all contributers.  - Crilum on GitHub for writing the scripts. ARM32/ARM64 - 4049 Users!</p> <pre><code>Awesome terminal resource monitor and task manager, similar to htop.\n\nRun from Terminal: btop\n\nbtop shows CPU, memory, network, and disk usage, along with a task manager.\nbtop is also very user customizable, with different layouts and ways of displaying CPU, memory, network and disk usage.\n\nIf you want to look at screenshots of btop, go to the GitHub README.\n</code></pre>"},{"location":"apps-list/#clam-antivirus","title":"Clam Antivirus","text":"<p>https://gitlab.com/dave_m/clamtk ARM32/ARM64 - 10384 Users!!</p> <pre><code>Open-source antivirus for your pi\nRun with the command \"clamtk\" or go to Menu &gt; Utility &gt; ClamTK.\n \u2219 Open source\n \u2219 Install it, set a schedule and forget it\n \u2219 Scans your entire filesystem\n \u2219 Moves suspicious files to quaratine \n \u2219 Has a GUI to control it\n</code></pre>"},{"location":"apps-list/#commanderpi","title":"CommanderPi","text":"<p>https://github.com/Jack477/CommanderPi ARM32/ARM64 - 30440 Users!!</p> <pre><code>Easy RaspberryPi4 GUI system management\nUsing CommanderPi, you can change overclock settings, bootloader settings, switch kernels, and view performance diagnostics.\nTo run: Menu -&gt; Accessories -&gt; CommanderPi\nTo run in a terminal: ~/CommanderPi/src/start.sh\n</code></pre>"},{"location":"apps-list/#disk-usage-analyzer","title":"Disk Usage Analyzer","text":"<p>https://wiki.gnome.org/Apps/DiskUsageAnalyzer - Botspot Package app - 33473 Users!!</p> <pre><code>Ever wonder where you put that big file, or why your SD card is full? Now you can, with a glance at a pie chart.\nTo run: Menu -&gt; System Tools -&gt; Disk Usage Analyzer\nTo run in a terminal: baobab\n</code></pre>"},{"location":"apps-list/#gparted","title":"GParted","text":"<p>https://gparted.org - Botspot Package app - 45470 Users!!</p> <pre><code>Graphically manage disk partitions\nWith GParted you can resize, copy, and move partitions without data loss, enabling you to:\n- Grow or shrink your C: drive\n- Create space for new operating systems\n- Attempt data rescue from lost partitions\n\nTo run: Menu -&gt; System Tools -&gt; GParted\nTo run in a terminal: sudo gparted\n</code></pre>"},{"location":"apps-list/#neofetch","title":"Neofetch","text":"<p>https://github.com/dylanaraps/neofetch - App Credit: dylanaraps - (GitHub: https://github.com/dylanaraps) Patches: theofficialgman ARM32/ARM64 - 24443 Users!!</p> <pre><code>An aesthetically pleasing bash script to show system information.\n\nTo run in terminal: 'neofetch'\n\nThis version of Neofetch is better than what can be found by default from APT. It correctly detects CPU and GPU info on ARM systems - details which are hidden in the official version.\n</code></pre>"},{"location":"apps-list/#pika-backup","title":"Pika Backup","text":"<p>https://github.com/sophie-h/pika-backup - Thanks to:  - @sophie-h on GitHub for creating this app  - @Crilum on GitHub for adding this app to Pi-Apps ARM64 ONLY - 600 Users</p> <pre><code>An easy way to backup all your drives. \n\nDoing backups the easy way. Plugin your USB drive and let the Pika do the rest for you.\n\n - Create backups locally and remote\n - Set a schedule for regular backups\n - Save time and disk space because Pika\n - Backup does not need to copy known data again\n - Encrypt your backups\n - List created archives and browse through their contents\n - Recover files or folders via your file browser\n\nPika Backup is designed to save your personal data and does not support complete system recovery. Pika Backup is powered by the well-tested BorgBackup software.\n</code></pre>"},{"location":"apps-list/#pi-power-tools","title":"Pi Power Tools","text":"<p>https://github.com/Botspot/Pi-Power-Tools ARM32/ARM64 - 21848 Users!!</p> <pre><code>Easily edit RaspiOS image files with a suite of useful tools.\nAll features: Advanced Mount, Shrink, Expand, Flash, Boot in a VM, Download, Mount (View), Edit partitions, and Repair.\n\nTo run: Menu -&gt; Accessories -&gt; Pi Power Tools\nTo run in a terminal: ~/Pi-Power-Tools/home\n</code></pre>"},{"location":"apps-list/#synaptic","title":"Synaptic","text":"<p>https://www.lifewire.com/guide-to-synaptic-package-manager-220570y - Botspot Package app - 19668 Users!!</p> <pre><code>Advanced APT-package-management tool\nTo run: Menu -&gt; Preferences -&gt; Synaptic Package Manager\nTo run in terminal: sudo synaptic\n</code></pre>"},{"location":"apps-list/#syncthing","title":"Syncthing","text":"<p>https://syncthing.net - @theofficialgman on GitHub for the scripts ARM32/ARM64 - 912 Users</p> <pre><code>A sync manager that syncs folders to different devices no matter where you are!\nto start, go to Internet =&gt; Syncthing start\nTerminal: syncthing.\n</code></pre>"},{"location":"apps-list/#sysmon","title":"Sysmon","text":"<p>https://github.com/t0xic0der/sysmon - @t0xic0der on GitHub for the creation of the app @ryanfortner on GitHub for the scripts ARM32/ARM64 - 2246 Users!</p> <pre><code>Monitor your Raspberry Pi using a web browser on another computer.\nThis is a background service that hosts a website at &lt;your Pi's IP address&gt;:6969. Using any computer on your local network, you can go to that website and view many useful statistics. (And some useless ones too)\n\nFor testing purposes, you can look at the website from the Pi itself by launching Chromium browser and going to http://localhost:6969\n\nAs mentioned earlier, the website is only visible to computers in the local network.\n</code></pre>"},{"location":"apps-list/#sysmontask","title":"SysMonTask","text":"<p>https://github.com/KrispyCamel4u/SysMonTask - @KrispyCamel4u (GitHub) for the program @ryanfortner (GitHub) for the scripts ARM32/ARM64 - 3263 Users!</p> <pre><code>Linux system monitor similar to the Windows task manager, written in Python.\nRun via the Main Menu &gt; System Tools &gt; SysMonTask.\n</code></pre>"},{"location":"apps-list/#system-monitoring-center","title":"System Monitoring Center","text":"<p>https://github.com/hakandundar34coding/system-monitoring-center - @hakandundar34coding (GitHub) @ryanfortner (GitHub) ARM32/ARM64 - 5347 Users!</p> <pre><code>Graphical Linux System Monitor that provides information about CPU/RAM/Disk/Network/GPU performance, sensors, processes, users, startup programs, services and system info.\n\nRun via the Main Menu &gt; System Tools &gt; System Monitoring Center.\n</code></pre>"},{"location":"apps-list/#timeshift","title":"Timeshift","text":"<p>https://github.com/linuxmint/timeshift - app created by: teejee2008  https://github.com/teejee2008/</p> <p>maintenance taken on by linuxmint: https://github.com/linuxmint/timeshift</p> <p>Added and updated on pi-apps: Itai-Nelken and theofficialgman https://github.com/Itai-Nelken/ https://github.com/theofficialgman ARM32/ARM64 - 5356 Users!</p> <pre><code>System restore tool for Linux that provides functionality similar to the System Restore feature in Windows and the Time Machine tool in Mac OS.\nCreates filesystem snapshots using rsync+hardlinks, or BTRFS snapshots. Supports scheduled snapshots, multiple backup levels, and exclude filters. Snapshots can be restored while system is running or from Live CD/USB.\n\nTo run GUI: Menu -&gt; Tools -&gt; Timeshift\nto run CLI interface from terminal: timeshift\n</code></pre>"},{"location":"apps-list/#update-buddy","title":"Update Buddy","text":"<p>https://github.com/Botspot/update-buddy ARM32/ARM64 - 12597 Users!!</p> <pre><code>Automatically check for APT updates on boot.\nIf anything can be upgraded, asks permission to upgrade.\nTo run: should run automatically on startup.\nTo run in a terminal: ~/update-buddy/onstartup.sh\n</code></pre>"},{"location":"apps-list/#terminals","title":"Terminals","text":""},{"location":"apps-list/#alacritty-terminal","title":"Alacritty Terminal","text":"<p>https://github.com/alacritty/alacritty - theofficialgman for building the debs. barnumbirr on github for making the debian sources. ARM32/ARM64 - 2116 Users!</p> <pre><code>A fast, cross-platform, OpenGL terminal emulator\n\nRun from Menu: Menu -&gt; System Tools -&gt; Alacritty\nRun from Terminal: alacritty\n</code></pre>"},{"location":"apps-list/#cool-retro-term","title":"Cool Retro Term","text":"<p>https://github.com/Swordfish90/cool-retro-term ARM32/ARM64 - 4985 Users!</p> <pre><code>Simulates an old CRT terminal.\nThis is fully hardware accelerated as long as your Fake KMS GPU driver is enabled.\nYes, it's a usable pi@raspberrypi terminal emulator.\n\nTo run: Menu -&gt; System Tools -&gt; Cool Retro Term\nTo run in terminal: ~/cool-retro-term/cool-retro-term\n</code></pre>"},{"location":"apps-list/#edex-ui","title":"eDEX-UI","text":"<p>https://github.com/GitSquared/edex-ui ARM32/ARM64 - 6797 Users!</p> <pre><code>Futuristic hacker terminal\nInspired from Hollywood, this terminal is beautiful to look at and will impress your friends. It's a fully-functional bash terminal, system monitor, file manager, and on-screen keyboard, all in one fullscreen window.\nOh, and it has sound effects.\nTo run: Menu -&gt; System Tools -&gt; eDEX-UI. This new version loads in about 10 seconds! (instead of 2 minutes like Novaspirit's old version)\n\nTo exit eDEX-UI, press Alt+F4, or run this command in the terminal: exit\nChange settings with Ctrl+Shift+S.\nView all keyboard shortcuts with Ctrl+Shift+K.\n\nNovaspirit Tech made an excellent walkthrough video a while ago: https://www.youtube.com/watch?v=DJOAmYlDQuM\n</code></pre>"},{"location":"apps-list/#guake-terminal","title":"Guake Terminal","text":"<p>http://guake-project.org/ - Botspot ARM32/ARM64 - 1595 Users!</p> <pre><code>Guake is a top-down terminal, inspirated by the famous terminal used in Quake.\n\nYou can show and hide your terminal with a single key stroke, execute a command, and then go back to your previous task without breaking your workflow.\n\nTo run: Press F12. (Guake runs automatically on startup)\nTo run manually: Menu -&gt; System Tools -&gt; Guake Terminal\nTo run in a terminal: guake\n</code></pre>"},{"location":"apps-list/#hyper","title":"Hyper","text":"<p>https://hyper.is - Thanks to:  - vercel and all contributors for creating Hyper!  - @Jai-JAP on GitHub for armv7l build &amp; fixing arm64 build  - @Crilum on GitHub for the simple scripts ARM32/ARM64 - 1272 Users</p> <pre><code>A modern electron terminal\n\nHyper is an Electron-based terminal.\n - Built on HTML/CSS/JS\n - Fully extensible\n - Install themes and plugins from the command line\n\nRun from Terminal: hyper\nRun from Menu: Menu -&gt; Accessories -&gt; Hyper\n</code></pre>"},{"location":"apps-list/#microsoft-powershell","title":"Microsoft PowerShell","text":"<p>https://docs.microsoft.com/en-us/powershell/scripting/install/install-raspbian?view=powershell-7.2 - Made by Microsoft [ Open Source Code ] Ported by TurquoiseTNT ARM32/ARM64 - 2223 Users!</p> <pre><code>PowerShell is a cross-platform (Windows, Linux, and macOS) automation and configuration tool/framework that works well with your existing tools and is optimized for dealing with structured data (e.g. JSON, CSV, XML, etc.), REST APIs, and object models. It includes a command-line shell, an associated scripting language and a framework for processing cmdlets.\n\nTo run: Menu -&gt; Accessories -&gt; Microsoft PowerShell\nIn terminal: pwsh\n</code></pre>"},{"location":"apps-list/#tabby","title":"Tabby","text":"<p>https://tabby.sh/ - Thanks to:  - Eugeny and all contributors for creating Tabby!  - @Jai-JAP on GitHub for armv7l &amp; arm64 builds &amp; for the simple scripts ARM32/ARM64 - 1125 Users</p> <pre><code> A terminal for a more modern age \nTabby (formerly Terminus) is a highly configurable terminal emulator, SSH and serial client for Windows, macOS and Linux.\n\nRun from Terminal: tabby\nRun from Menu: Menu -&gt; Accessories -&gt; Tabby\n</code></pre>"},{"location":"apps-list/#tools","title":"Tools","text":""},{"location":"apps-list/#androidbuddy","title":"AndroidBuddy","text":"<p>https://gitlab.com/gazlene/droidbuddy - Made by gazlene#8088 on Discord</p> <p>Added to pi-apps by Raspberry Pi News and Botspot ARM32/ARM64 - 9503 Users!</p> <pre><code>A GUI for Android device recovery and maintenance.\n\nTo run: Menu &gt; Accessories &gt; AndroidBuddy\nTo run in a temrinal: python3 ~/droidbuddy/main.py\n\nFeatures: \n- APK Installation: Install an Android application package with ease.\n- Screen viewing and interaction: Control your device through an scrcpy window.\n- Recover files: Allows you to back up music, downloads, photos or all of your device's files.\n- AND MORE! Check out the website for more info.\n</code></pre>"},{"location":"apps-list/#antimicrox","title":"AntiMicroX","text":"<p>https://antimicrox.github.io/ - Thanks to:  - All contributers for creating AntiMicroX.  - ryanfortner for his information on how to build AntiMicroX.  - Crilum on GitHub for writing the install/uninstall scripts. ARM32/ARM64 - 2957 Users!</p> <pre><code>A graphical program used to map keyboard buttons and mouse controls to a gamepad.\n\nUseful for playing games with no gamepad support.\n\nRun from Menu: Menu -&gt; Accesories -&gt; AntiMicroX\nRun from Terminal: antimicrox\n</code></pre>"},{"location":"apps-list/#balenaetcher","title":"BalenaEtcher","text":"<p>https://github.com/Pi-Apps-Coders/files/raw/main/CompileCommands.md#balenaetcher - @theofficialgman (GitHub) @Itai-Nelken (GitHub) @ryanfortner (GitHub) ARM32/ARM64 - 27229 Users!!</p> <pre><code>Flash SD cards with a disk image. Many file types supported.\nTo run: Menu -&gt; Accessories -&gt; balenaEtcher\nTo run in a terminal: balena-etcher\n</code></pre>"},{"location":"apps-list/#ckb-next","title":"ckb-next","text":"<p>https://github.com/ckb-next/ckb-next - @ryanfortner (GitHub) Package app - 214 Users</p> <pre><code>ckb-next is an open-source Linux driver for Corsair keyboards and mice.\nFeatures include:\n- Customizable key bindings\n- Lighting and animation settings\n- Adjustable DPI for mice\n- and more!\n\nRun from Menu &gt; Preferences &gt; ckb-next, or simply run `ckb-next` in a terminal.\n\n**DISCLAIMER**: this is NOT an official Corsair product and does not come with a warranty. Also, not all Corsair products are fully supported. Use at your own risk.\n</code></pre>"},{"location":"apps-list/#ducopanel","title":"Ducopanel","text":"<p>https://github.com/ponsato/ducopanel - @ponsato (GitHub) for the program @ryanfortner (GitHub) for the scripts ARM64 ONLY - 252 Users</p> <pre><code>Desktop app to manage Duino-Coin miners and tools.\n\nYou can upload the code to any Arduino board, mine with all the boards or with the ones you choose, mine with the PC (choosing the cores you want), and much more.\nYou can also connect to your official wallet and perform any operation without leaving the application, as well as see the live status of the network and servers.\nThis development makes everything related to DuinoCoin even easier, based exclusively on the official tools.\n\nElectronJs has been used for this purpose.\n\nTo run the program: Main Menu -&gt; Accessories -&gt; Ducopanel\n</code></pre>"},{"location":"apps-list/#ff-multi-converter","title":"FF Multi Converter","text":"<p>https://sites.google.com/site/ffmulticonverter/ - Thanks to Crilum on GitHub for writing the scripts. Thanks to ilstad on GitHub and all Contributors for creating FF Multi Converter! ARM32/ARM64 - 2549 Users!</p> <pre><code>FF Multi Converter is a simple graphical application for Linux which enables you to convert audio,\nvideo, image and document files.\n\nIt uses FFmpeg for audio/video files, the ImageMagick software suite for image conversions and\nunoconv for document files.\n\nThe goal of FF Multi Converter is to gather the most popular multimedia types in one application\nand provide conversion options for them easily through a user-friendly graphical interface.\n\nRun from Menu: Menu -&gt; Accesories -&gt; FF Multi Converter\nRun from Terminal: ffmulticonverter\n</code></pre>"},{"location":"apps-list/#flameshot","title":"Flameshot","text":"<p>https://flameshot.org/ - Flameshot.org for creating the tool + all github contributors CleanMachine1 for the install scripts and suggestion Itai-Nelken for finding the .deb files for installing Chunky-Milk for hosting the .deb file in their Github ARM32/ARM64 - 7418 Users!</p> <pre><code>A simple tool to take screenshots of your screen or just parts of the screen. It is similar to Microsoft's Snipping Tool.\n\nTo launch: Menu -&gt; Graphics -&gt; Flameshot\nTo use: find the flameshot icon in your taskbar (system tray) and click it to open Flameshot.\nTo run in a terminal: flameshot\n</code></pre>"},{"location":"apps-list/#geekbench","title":"Geekbench","text":"<p>https://www.geekbench.com/ ARM32/ARM64 - 4707 Users!</p> <pre><code>Geekbench 5 is a cross-platform benchmark that measures your system's performance with the press of a button. \nHow will your mobile device or desktop computer perform when push comes to crunch? \nHow will it compare to the newest devices on the market? \nFind out today with Geekbench 5.\n\nTo run in terminal: geekbench\n</code></pre>"},{"location":"apps-list/#https-file-server","title":"Https File Server","text":"<p>http://www.rejetto.com/hfs/?f=intro ARM32 ONLY - 1469 Users</p> <pre><code>Simple file-sharing webserver. Other computers on your local network can connect to your computer from the web browser and download files you share.\nOr, you can enable port forwarding on your router so that anyone on the Internet can download your files.\nThis app uses Wine to run a windows exe file.\n\nTo launch: Menu -&gt; Applications -&gt; HTTPS File Server\n</code></pre>"},{"location":"apps-list/#imager","title":"Imager","text":"<p>https://www.raspberrypi.org/blog/raspberry-pi-imager-imaging-utility - Botspot Package app - 143035 Users!!</p> <pre><code>Raspberry Pi's official SD card imaging utility.\nThis includes many features and customizations you can make to the image before flashing, and is overall very reliable.\nTo run: Menu -&gt; Accessories -&gt; Imager\nTo run in terminal: rpi-imager\n</code></pre>"},{"location":"apps-list/#keepassxc","title":"KeePassXC","text":"<p>https://github.com/keepassxreboot/keepassxc - @ryanfortner (GitHub) for the scripts @raspbian-addons maintainers for the deb ARM32/ARM64 - 1504 Users!</p> <pre><code>KeePassXC is a modern, secure, and open-source password manager that stores and manages sensitive information.\nRun via the Main Menu &gt; Accessories &gt; KeePassXC\n</code></pre>"},{"location":"apps-list/#linux-wifi-hotspot","title":"Linux Wifi Hotspot","text":"<p>https://github.com/lakinduakash/linux-wifi-hotspot - Thanks to:  - @lakinduakash on GitHub (as well as all contributors) for creating this app  - @Crilum on GitHub for adding this app to Pi-Apps ARM32/ARM64 - 3043 Users!</p> <pre><code>A feature-rich wifi hotspot creator for Linux which provides both GUI and command-line interface.\n\nRun GUI from Menu: Menu -&gt; System Tools -&gt; Wifi Hotspot\nRun GUI from Terminal: wihotspot\nRun CLI from Terminal: create_ap\n\nFeatures:\n - Share your wifi like in Windows - Use wifi and enable hotspot at the same time.\n - Share a wifi access point from any network interface\n - Share wifi via QR code\n - MAC filter\n - View connected devices\n - Includes both CLI and GUI.\n - Supports both 2.4GHz and 5GHz - You can be connected to a 5GHz network and have your hotspot on a 2.4GHz network.\n - Customise wifi channel, Change MAC address, etc.\n - Hide SSID\n - Customize gateway IP address\n - Enable IEEE 80211n, IEEE 80211ac modes\n\nNote: Running Linux Wifi Hotspot from the Menu will turn on your Wifi, becuause trying to start a Hotspot with your Wifi off won't work.\n</code></pre>"},{"location":"apps-list/#more-ram","title":"More RAM","text":"<p>https://forums.raspberrypi.com/viewtopic.php?t=327238 - Botspot ARM32/ARM64 - 19280 Users!!</p> <pre><code>Of course Pi-Apps lets you download more RAM!\nHave you ever been using your Raspberry Pi when the screen froze? Most likely, your system ran out of RAM.\nOn default Raspbian, freezes happen easily and suddenly. When the RAM fills up, the entire system becomes unresponsive. Many people think the only solution is to buy a Pi with more RAM, but THAT'S NOT TRUE and this app proves it.\n\nThis app uses ZRAM to increase the capacity of your RAM. ZRAM is a kernel module to compress data on-the-fly and store it in RAM. It has all sorts of uses, but it can be an extremely performant Swap drive with the right tweaks.\n\nSome types of data compress better than others. On average, the ZSTD algorithm reaches a 3:1 compression-ratio, but in some cases it can approach 5:1! When used as Swap, this means that theoretically, one RAM chip can store 5 times as much memory! While real-world loads are unlikely to be compressible that much, the results are still impressive. In a recent test, Chromium was instructed to open 200 tabs. (mostly youtube videos)\nWhen everything finished loading, Chromium had consumed 7GB of RAM. However, this test was performed on a Raspberry Pi 4 with only 4GB of RAM! Without ZRAM, the screen would have frozen within seconds. But with ZRAM, the system was still very responsive.\n\nWhat does this app do?\n- This app will disable the default Swapfile. (By default, RPiOS comes with a pitiful 100MB swapfile that does barely anything) Disabling Swap reduces the number of writes to the SD card, boosting performance while increasing its lifetime.\n- This app will setup ZRAM to extend the usable RAM, when necessary. How much ZRAM? It's calculated based on a 4:1 ratio of your devices available RAM. On a 1GB Pi, there will be 4GB of ZRAM; on a 4GB Pi there will be 16GB of ZRAM. Remember: this relies on compressing data, so some situations may not be able to reach the full 4:1 compression-ratio.\n- This app will adjust a few kernel paremeters to optimize RAM usage.\n- Remember how ZRAM can be used for other things too? This app will also set up some high speed data storage using ZRAM. It's perfect for managing large files temporarily, without filling up your SD card. This is similar to a RAMdisk, but it doesn't use the RAM as quickly. You can access this storage by going to the new /zram folder.\nOf course, uninstalling this app will revert everything back to how it was.\n\nHow do I know if it's working? There are a few ways to check.\n- You can run the htop command to see RAM and Swap usage. Htop will refresh itself every second, just like the Task Manager.\n- You can install Conky from Pi-Apps. This will display the RAM and Swap usage on the desktop. Conky refreshes twice every second.\n- To see more detailed ZRAM information and statistics, run the zramctl command.\n\nWhat about Novaspirit Tech's popular ZRAM tutorial from a few years ago? Is this app better? Yes. First, Novaspirit created four swapdisks, while only one is necessary. Also, he used LZ4 compression, while this app uses the new ZSTD compression algorithm. (ZSTD is slightly slower than LZ4, but its compression ratio is far better) Also, he didn't tweak any kernel parameters, severaly limiting ZRAM's effectiveness.\n\nOverall, this app is designed to get the most out of ZRAM. Even if your Pi never uses all available RAM, installing this app will unlock more space for file-caching, thereby improving performance while reducing writes to the SD card.\n</code></pre>"},{"location":"apps-list/#nautilus","title":"Nautilus","text":"<p>https://wiki.gnome.org/Apps/Files - Botspot Package app - 16760 Users!!</p> <pre><code>Feature-rich file manager for the GNOME desktop\nTo run: Menu -&gt; Accessories -&gt; Nautilus\nTo run in terminal: nautilus\n</code></pre>"},{"location":"apps-list/#nemo","title":"Nemo","text":"<p>https://github.com/linuxmint/nemo - open-sorcerer64 linuxmint Package app - 3972 Users!</p> <pre><code>File manager and graphical shell for Cinnamon, also works well on other desktop environments.\n\nNemo is the official file manager for the Cinnamon desktop. It allows one to browse directories, preview files, and launch applications associated with them.\nIt is also responsible for handling the icons on the Cinnamon desktop. It works on local and remote filesystems. Several icon themes and components for viewing different kinds of files are available in separate packages.\n\nTo run: Menu -&gt; Accessories -&gt; Files\nTo run in terminal: nemo\n</code></pre>"},{"location":"apps-list/#nodejs","title":"Node.js","text":"<p>https://nodesource.com/ - Script by ilobilo Script improved by Itai-Nelken ARM32/ARM64 - 5756 Users!</p> <pre><code>JavaScript code outside a web browser.\nNode.js is used for all npm packages and is the foundation of Electron.\nAs usual, this app will keep it updated.\n</code></pre>"},{"location":"apps-list/#peazip","title":"PeaZip","text":"<p>https://peazip.github.io - @ryanfortner (GitHub) ARM64 ONLY - 1372 Users</p> <pre><code>PeaZip is free file archiver utility, based on Open Source technologies of 7-Zip, p7zip, Brotli, FreeArc, PAQ, Zstandard, and PEA projects.\n\nCross-platform, full-featured but user-friendly alternative to WinRar, WinZip and similar general purpose archive manager applications, open and extract 200+ archive formats: 001, 7Z, ACE, ARC, ARJ, BR, BZ2, CAB, DMG, GZ, ISO, LHA, PAQ, PEA, RAR, TAR, UDF, WIM, XZ, ZIP, ZIPX, ZST - view full list of supported archive file formats for archiving and for extraction.\n</code></pre>"},{"location":"apps-list/#pi-apps-terminal-plugin-bash","title":"Pi-Apps Terminal Plugin (bash)","text":"<p>https://github.com/Itai-Nelken/PiApps-terminal_bash-edition - Created and added to pi-apps by Itai-Nelken ARM32/ARM64 - 2398 Users!</p> <pre><code>Pi-apps terminal is a script that lets you use pi-apps from the terminal, its written in bash.\nIt has all the commands you will ever need:\n'install' - install a app available in pi-apps.\n'remove' - uninstall a app installed by pi-apps (uninstall also works).\n'multi-install' - install multiple apps.\n'multi-remove' - uninstall multiple apps (multi-uninstall also works).\n'list-all' - list all the apps in pi-apps (note that this will also list apps that are not available for your OS).\n'list-installed' - list all the apps installed by pi-apps.\n'list-uninstalled' - list all the uninstalled apps.\n'list-corrupted' - list all the corrupted apps.\n'search' - usage: search \"search-term\". search a app available in pi-apps (note that this will show results from the description of the 'apps as well as their name).\n'website' - usage: website \"app-name\". print the website of a app available in pi-apps.\n'update' - update all pi-apps components.\n'update-apps' - update all pi-apps apps only.\n'gui' - launch pi-apps regularly.\n\nand it makes life easier by eliminating the use of quotes for apps with a space in their name (unless you are using 'multi-install' or 'multi-uninstall').\n</code></pre>"},{"location":"apps-list/#pi-apps-terminal-plugin-python","title":"Pi-Apps Terminal Plugin (python)","text":"<p>https://github.com/techcoder20/PiAppsTerminalAdvanced - App made by and added to pi-apps by RPICoder ARM32 ONLY - 1265 Users</p> <pre><code>This is a terminal version of pi apps but with more features.\n\nUsage\npi-apps [argument]\n\nAvailable Arguments: \n\"list-all\"  Prints the list of available apps that are installable\n\"list-installed\"  Prints all installed apps\n\"list-uninstalled\"  Prints all uninstalled apps\n\"install [appname]\"  Install any app available in pi-apps\n\"uninstall [appname]\"  Uninstall any app available in pi-apps\n\"search [appname]\"  Search for a app in pi apps\n\"website [appname]\"  Prints website for app\n\"update\"  Update pi-apps\n\"gui\"  Launches gui for pi-apps\n\nRun \"pi-apps help\" to get this information\n</code></pre>"},{"location":"apps-list/#pigro","title":"PiGro","text":"<p>https://github.com/actionschnitzel/PiGro-Aid- ARM32/ARM64 - 10445 Users!!</p> <pre><code>PiGro is a program designed to make all Debian-based distributions easier to use on the Pi.\nThe most common terminal commands can be executed with one click.\n</code></pre>"},{"location":"apps-list/#pikiss-gui","title":"PiKISS GUI","text":"<p>https://github.com/Jai-JAP/PiKISS-GUI - @krishenriksen on Github for creating PiKISS-GUI. @Jai-JAP on Github for modifying the app to add semi-automated app syncs from piKISS &amp; adding this app to Pi-Apps. ARM32/ARM64 - 5608 Users!</p> <pre><code>PiKISS GUI is a GTK frontend for PiKISS\n\nTo run: Menu -&gt; Accessories -&gt; PiKISS GUI\nTo run in a terminal: ~/.local/bin/pikiss-gui\n\nTo Sync apps with PiKISS:\nRun: Menu -&gt; Accessories -&gt; PiKISS GUI Sync Apps\n(or)\nFrom terminal run: ~/local/share/pikiss-gui/getapps.sh\n</code></pre>"},{"location":"apps-list/#pikiss","title":"piKiss","text":"<p>https://github.com/jmcerrejon/PiKISS ARM32/ARM64 - 23364 Users!!</p> <pre><code>A bunch of scripts with a menu to make your life easier. \nTo run: Menu -&gt; System Tools -&gt; PiKiss\nTo run in a terminal: ~/piKiss/piKiss.sh\n \u2219 Easy system configuration\n \u2219 Ability to install your favourite games like Half Life\n \u2219 Emulators galore!\n \u2219 Install apps like OBS and Cool-Retro-Term!\n \u2219 AND MUCH MORE!\n\nATTENTION! The pi-kiss maintainer only uses edge versions of software. This means that if you installed something and it works, it does not mean that it will work in the future. Currently only Bullseye is supported, operation on Buster and similar systems is not guaranteed. Do not rush to remove your programs, you may not be able to install them in the future.\n</code></pre>"},{"location":"apps-list/#pisafe","title":"PiSafe","text":"<p>https://github.com/RichardMidnight/pi-safe ARM32/ARM64 - 3534 Users!</p> <pre><code>Create compressed image files.  Flash SD cards from a disk image. Many file types supported.\nTo run: Menu -&gt; Accessories -&gt; PiSafe\nTo run in a terminal: pisafe\n</code></pre>"},{"location":"apps-list/#scrcpy","title":"Scrcpy","text":"<p>https://github.com/Genymobile/scrcpy ARM32/ARM64 - 10402 Users!!</p> <pre><code>Connect and control your Android smartphone.\nThis is similar to a remote desktop, where you can view the device's screen and navigate it normally.\n\nTo run: Menu -&gt; System Tools -&gt; Scrcpy\nTo run in a terminal: scrcpy\n\nNotes:\n- For more info, run \"scrcpy --help\"\n- The Android device requires at least API 21 (Android 5.0).\n- Make sure you enabled ADB debugging on your device.\n- The device needs to be connected to the same local network, or via USB.\n- On some devices, you also need to enable an additional option to control it using keyboard and mouse.\n- If you have issues, try to run the app a couple of times through Terminal.\n</code></pre>"},{"location":"apps-list/#screenshot","title":"Screenshot","text":"<p>https://apps.gnome.org/app/org.gnome.Screenshot - Botspot Package app - 16082 Users!!</p> <pre><code>Simple interface for capturing screenshots, similar to the Windows Snipping Tool.\nTo run: Menu -&gt; Accessories -&gt; Screenshot\nTo run in terminal: gnome-screenshot\n</code></pre>"},{"location":"apps-list/#snapdrop","title":"Snapdrop","text":"<p>https://github.com/RobinLinus/snapdrop - @ryanfortner (GitHub) ARM32/ARM64 - 5632 Users!</p> <pre><code>Share files with nearby devices on the local network. Inspired by Apple's Airdrop.\nTo run: Menu -&gt; Internet -&gt; Snapdrop\nTo use: Open a web browser on the other computer/smartphone and go to snapdrop.net\nNow drag and drop files to the website, and the other device will see the files and download them.\n</code></pre>"},{"location":"apps-list/#snap-store","title":"Snap Store","text":"<p>https://snapcraft.io/store - Installation script and made by RPICoder ARM32/ARM64 - 22884 Users!!</p> <pre><code>Snaps are app packages for desktop, cloud and IoT that are easy to install, secure, cross\u2010platform and dependency\u2010free.\nSnaps are discoverable and installable from the Snap Store, the app store for Linux with an audience of millions.\n</code></pre>"},{"location":"apps-list/#temps","title":"Temps","text":"<p>https://github.com/musicpro/temps - Thanks to Crilum on GitHub for making the scripts. Thanks to jackd248 on GitHub for the original temps. Thanks to promusic on GitHub for forking and continuing development on this awesome app! ARM32/ARM64 - 1651 Users!</p> <pre><code>Temps is a modern and minimal menubar application based on Electron with actual weather information and forecast.\n\nRun from: Menu -&gt; Accessories -&gt; Temps\nor from Terminal: temps\n\n</code></pre>"},{"location":"apps-list/#tilp","title":"TiLP","text":"<p>https://github.com/debrouxl/tilp_and_gfm - @ryanfortner (GitHub) Package app - 540 Users</p> <pre><code>TiLP is a linking program for Texas Instruments graphing calculators. It can transfer apps, programs, and more to a calculator.\n</code></pre>"},{"location":"apps-list/#tldr","title":"tldr","text":"<p>https://dbrgn.github.io/tealdeer - the main developer - dbrgn (Danilo Bargen) ARM32/ARM64 - 2544 Users!</p> <pre><code>The tldr project is a collection of community-maintained help pages for command-line tools, that aims to be a simpler, more approachable complement to traditional man pages.\n\nRun it by typing \"tldr &lt;command&gt;\" into terminal.\n\nMaybe you are new to the command-line world? Or just a little rusty? Or perhaps you can't always remember the arguments to lsof, or tar?\n\nIt also is more digestable than man pages which blasts pages of useless stuff at you every time you use it.\n</code></pre>"},{"location":"apps-list/#usbimager","title":"USBImager","text":"<p>https://bztsrc.gitlab.io/usbimager/ ARM32/ARM64 - 8510 Users!</p> <pre><code>A very minimal GUI app that can write compressed disk images to USB drives.\nUSBImager is a very useful and minimal app that works like etcher and Raspberry Pi imager but needs less resources, (it's less then 400kb).\n\nTo run from terminal, type: usbimager.\n</code></pre>"},{"location":"apps-list/#veracrypt","title":"VeraCrypt","text":"<p>https://www.veracrypt.fr/en/Documentation.html - nielsbaloe on Github suggested this be added. Botspot added it. ARM32/ARM64 - 3639 Users!</p> <pre><code>Open source disk encryption software\n- Creates a virtual encrypted disk within a file and mounts it as a real disk.\n- Encrypts an entire partition or storage device such as USB flash drive or hard drive.\n- Encrypts a partition or drive where Windows is installed (pre-boot authentication).\n- Encryption is automatic, real-time(on-the-fly) and transparent.\n- Parallelization and pipelining allow data to be read and written as fast as if the drive was not encrypted.\n- Encryption can be hardware-accelerated on modern processors.\n- Provides plausible deniability, in case an adversary forces you to reveal the password: Hidden volume (steganography) and hidden operating system.\n- More information about the features of VeraCrypt may be found in the documentation.\n</code></pre>"},{"location":"apps-list/#vmware-horizon-client","title":"VMware Horizon Client","text":"<p>https://www.vmware.com/products/horizon ARM32 ONLY - 466 Users</p> <pre><code>VMware Horizon Client allows your end users to connect to their VMware Horizon View VM from a device of choice.\n\nThe Horizon Client app communicates with the View Connection Server, which acts as a broker between the client device and View desktops. Users enter credentials into Horizon Client and the View Connection Server authenticates them and then finds their virtual desktops.\n\nIT administrators can also use Horizon Client and the View Connection Server to deliver Microsoft Remote Desktop Session Host (RDSH) desktops and applications from an RDSH farm or to deliver VMware ThinApp applications within Horizon View.\n</code></pre>"},{"location":"apps-list/#windows-flasher","title":"Windows Flasher","text":"<p>https://github.com/Botspot/wor-flasher - Botspot ARM32/ARM64 - 19054 Users!!</p> <pre><code>Install Windows 10 or Windows 11 on a Raspberry Pi SD card.\nThis tool is a 100% legal way to use any Debian or Ubuntu Linux operating system to flash a RPi's SD card with the necessary files to run Windows 10 or 11.\n\nUsage is simple:\n- Choose an operating system version. (Windows 11, Windows 10, Custom version)\n- Choose what model Pi will be running Windows. (RPi4 or RPi3)\n- Choose a language.\n- Choose a storage drive to flash.\n- Click Flash.\nIt's as simple as that. WoR-flasher takes care of the rest - downloading hundreds of files from Microsoft, generating a Windows image with them, importing the custom RPi drivers, enabling the WinPE environment, and much more. When finished, WoR-flasher will tell you exactly what to do next.\n\nTo run: Menu -&gt; Accessories -&gt; WoR-Flasher\nTo run the graphical interface in a terminal: ~/wor-flasher/install-wor-gui.sh\nTo run the command-line interface in a terminal: ~/wor-flasher/install-wor.sh\n\nIf you encounter problems, we recommend you run WoR-flasher in a terminal to catch any errors.\n</code></pre>"},{"location":"apps-list/#xfburn","title":"Xfburn","text":"<p>https://docs.xfce.org/apps/xfburn/start - @Rak1ta (GitHub) Package app - 16907 Users!!</p> <pre><code>Xfburn is a tool to help burning CDs and DVDs. It fits well in the Xfce Desktop Environment but can be used anywhere.\n\nTo run: Menu -&gt; Multimedia -&gt; Xfburn\nTo run in terminal: xfburn\n</code></pre>"},{"location":"apps-list/#xmrig","title":"XMRig","text":"<p>https://github.com/xmrig/xmrig - Thanks to  - Everyone who has contributed to XMRig!  - Crilum on Github for writing install/uninstall scripts!  - @GYKgamer on Github for suggesting this! ARM32/ARM64 - 539 Users</p> <pre><code>Advanced cryptocurrency miner - for Monero and beyond\nSupports RandomX, KawPow, CryptoNight, AstroBWT and GhostRider algorithms.\n\nSee the website for more information.\n\nIf you need an XMR wallet, go to https://wallet.mymonero.com/, create a wallet, and save the mnumonic somewhere safe. You will need the Wallet Address for Mining.\n\nTo run in a terminal: xmrig\nThis is assuming you set up the config file. Otherwise, you can add flags like this: \nxmrig -o gulf.moneroocean.stream:10032 -u YOUR_WALLET_ADDRESS\n\nIf you use the MoneroOcean pool, you can view the miner's performance by visiting https://moneroocean.stream\n\nNOTE:\nThis is not a Bitcoin miner! Most XMRig users mine Monero - a cryptocurrency with exceptional privacy, security, and decentralization measures.\nMonero is probably the best currency for PC mining, as its mining algorithm is specifically designed to thwart specialized mining equipment.\n</code></pre>"},{"location":"apps-list/#toolsemulation","title":"Tools/Emulation","text":""},{"location":"apps-list/#box64","title":"Box64","text":"<p>https://github.com/ptitSeb/box64 - ptitseb for creating box64 debs made by @ryanfortner (GitHub) ARM64 ONLY - 12214 Users!!</p> <pre><code>Easily emulate x86_64 linux apps on ARM64.\n\nBox64 lets you run x86_64 Linux programs (such as games) on non-x86_64 Linux systems, like ARM (host system needs to be 64bit little-endian).\n\nBecause Box64 uses the native versions of some \"system\" libraries, like libc, libm, SDL, and OpenGL, it's easy to integrate and use with most applications, and performance can be surprisingly high in many cases.\n</code></pre>"},{"location":"apps-list/#box86","title":"Box86","text":"<p>https://github.com/ptitSeb/box86 - Itai-Nelken for his box86 debs and script creation ARM32/ARM64 - 60654 Users!!</p> <pre><code>Easily emulate x86 linux apps on ARM32.\nBox86 lets you run x86 Linux programs (such as games) on non-x86 Linux, like ARM (host system needs to be 32bit little-endian).\nBecause Box86 uses the native versions of some \"system\" libraries, like libc, libm, SDL and OpenGL, it's easy to integrate and use, and performance can be surprisingly high in some cases.\nBox86 now integrates a DynaRec (dynamic recompiler) for the ARM platform, providing a speed boost between 5 to 10 times faster than only using the interpreter.\n</code></pre>"},{"location":"apps-list/#qemu","title":"QEMU","text":"<p>https://www.qemu.org/ - Added to Pi-Apps by Itai-Nelken debs compiled and packaged using QEMU2DEB (tool by Itai-Nelken) by ryanfortner. ARM32/ARM64 - 7553 Users!</p> <pre><code>QEMU is a generic and open source machine emulator and virtualizer.\nQEMU 6.1 for Buster, system QEMU for other distros (Bullseye is currently using 7.0).\n</code></pre>"},{"location":"apps-list/#wine-x86","title":"Wine (x86)","text":"<p>https://www.winehq.org/ - Script by Itai-Nelken and Botspot ARM32 ONLY - 43034 Users!!</p> <pre><code>Run x86 Windows apps with a box86-emulated version of x86 wine.\nTo run: wine path/to/file.exe\nTo configure wine: go to 'Wine configuration' in main menu or type in terminal: wine winecfg\nNot all Windows applications will work under Wine. It's a good idea to check online if your program can run, or if something can be tweaked to make it work.\n\nNote: the applications installed with wine will appear under the wine category in the main menu, and they will stay there even after uninstalling wine.\n\nNeed support with running a game or app with wine and box86? Ask it on the Pi Labs Discord: https://discord.gg/JKNQXprqUd\n</code></pre>"},{"location":"introduction/","title":"Introduction","text":"<ul> <li>Pi-Apps is written in <code>bash</code>. This is a scripting language for Linux, with origins in the 80s. Bash is not a compiled language like C, it's an interpreted language, similar to Python and Windows .bat files.   Bash serves a different purpose than a compiled language: orchestrating OS-level events and prioritizing programming-time over execution-time. It is system-dependent and architecture-dependent.   You probably interact with <code>bash</code> without even realizing it! Nearly all Linux distributions today use a bash terminal. If you have ever opened a terminal, you have interacted with bash. </li> <li>Pi-Apps is comprised of bash scripts. These are text files that are filled with bash commands. To illustrate this, you can often open a bash script, copy the contents, and paste it into a bash terminal. And it will work exactly the same as if you executed the file! In fact, if Pi-Apps was reorganized into a single standalone bash script, you could copy and paste the entire thing into a terminal and have a working app store! </li> <li>If Pi-Apps is only bash scripts, how does it display a GUI? (graphical user interface) Good question. When Pi-Apps was just a concept, I knew that bash was the obvious choice for installing apps. And that makes sense: if you normally install an application by running commands in a bash-terminal, it only makes sense to use a bash-script.   Bash was the best choice for installing apps, but what about the GUI? Most GUIs are made in C, C++, Python or JavaScript with GTK, Qt, or Electron. These were workable options, but for long-term maintainability and convenience I wanted to only use one language for the whole thing. Someone suggested <code>zenity</code> - a simple dialog program meant for bash scripts. I tried it, but was soon frustrated by its limitations. Then I discovered <code>yad</code> - an improved version of zenity with many more options. Pi-Apps uses <code>yad</code> for everything.</li> </ul>"},{"location":"folders/the-app-folder/","title":"The app folder","text":"<p>It makes sense to start here. After all, what is an app store without apps? Basically, for every app, there is a folder. This folder is called an \"app-folder\". On a default pi-apps installation, all app-folders are located in <code>/home/pi/pi-apps/apps</code>. The folder's name is the app's name. The Arduino app is a folder located at <code>apps/Arduino</code>. There are a few files in each app-folder: - <code>install</code> - This is a bash script to install the app.   - Naming the script \"install\" indicates that it is compatible with 32-bit and 64-bit CPU architectures. - <code>install-32</code> - This is a bash script to install the app on 32-bit operating systems.   - Naming the script \"install-32\" indicates that it is designed for the 32-bit CPU architecture only.   - If no \"install-64\" script exists, then this app will only be displayed on 32-bit systems. - <code>install-64</code> - This is a bash script to install the app on 64-bit operating systems.   - Naming the script \"install-64\" indicates that it is designed for the 64-bit CPU architecture only.   - If no \"install-32\" script exists, then this app will only be displayed on 64-bit systems. - <code>uninstall</code> - This is a bash script to uninstall the app. - <code>icon-24.png</code> and <code>icon-64.png</code> - These are the app's icons. - <code>description</code> - This is a text file to explain what the app is, how it works, and why anybody would want it.   - The first line of this file is used as the tooltip (mouse hover-text) in the list of apps. - <code>credits</code> - This is a text file to give credit to the person who made the app. - <code>website</code> - This is a text file containing the website URL of a given project.   - Usually it points to a website where users can learn more about the app.</p>"},{"location":"folders/the-app-status-folder/","title":"The app status folder","text":"<p>Pi-Apps keeps track of each app's status: installed or uninstalled. (as well as a few other possible values) Each app's status is located in the <code>data/status</code> folder. For example, on a default Pi-Apps installation, the status file for arduino is located at: <code>/home/pi/pi-apps/data/status/Arduino</code>. Each file in this folder will contain one of these possible values: - <code>installed</code> - The app is currently installed. - <code>uninstalled</code> - The app is currently uninstalled. - <code>corrupted</code> - The app failed to install/uninstall. - <code>disabled</code> - The app is in a disabled state: it will not be installed under any circumstances.    - This status is useful for TwisterOS where Box86 comes pre-installed. We don't want Pi-Apps installing Box86 under any circumstances, even if another app requires it to be installed.</p> <p>As mentioned earlier, Pi-Apps runs on bash scripts. Each script has a certain job to do, and together they make Pi-Apps work.  </p> <p>See the scripts folder for how each individual script works.</p>"},{"location":"folders/the-main-pi-apps-folder/","title":"The main pi apps folder","text":"<p>The Pi-Apps folder contains several main subfolders. These folders have special characteristics and are treated differently during updates. - The <code>data</code> folder and <code>logs</code> folder contain files that should never be updated. They contains settings, cached files, app-status files, log files, etc. - The <code>apps</code> folder contains apps. During an update it this folder is handled differently too. - Other folders like <code>icons</code> and <code>etc</code> are handled the same as individual files in the main pi-apps folder. </p>"},{"location":"scripts/the-api-script/","title":"The api script","text":""},{"location":"scripts/the-api-script/#location","title":"Location:","text":"<p>On a default pi-apps installation, you will find this script at <code>/home/pi/pi-apps/api</code>. </p>"},{"location":"scripts/the-api-script/#purpose","title":"Purpose:","text":"<p>This script is a collection of functions that do various things. Functions are small chunks of bash-code that can be run like a normal command.</p>"},{"location":"scripts/the-api-script/#usage","title":"Usage:","text":"<pre><code>source ~/pi-apps/api\n</code></pre> <p>You can now run any of the functions inside the api script as if they were real commands. Alternatively, the <code>api</code> script supports running a single function without being sourced:</p> <pre><code>~/pi-apps/api apt_lock_wait\n</code></pre>"},{"location":"scripts/the-api-script/#list-of-functions","title":"List of functions:","text":"<p>Note: new functions are added often. If you don't see a function on this list but do see it in the api, please let us know. - <code>error</code> - display a custom message in red and exit with a return code of <code>1</code>.   Usage:   <code>error \"The command 'sudo apt update' failed!\"</code>   This is often seen at the end of a command with the <code>||</code> operator:   <code>sudo apt update || error \"The command 'sudo apt update' failed!\"</code> - <code>warning</code> - Display a custom message in yellow and prefix it with \"WARNING: \".   - Useful for everything where something is wrong but it's not a fatal error.   - This function outputs to <code>stderr</code>. - <code>status</code> - Display a custom message in light-blue.   - Used by scripts to indicate current status, like \"Downloading...\", \"Extracting...\", and \"Please wait.\"   - This function outputs to <code>stderr</code>.   - Some scripts don't want the ending newline, so this function allows for flags to be passed to the <code>echo</code> command. Example usage: <code>status -n \"Downloading... \"</code> - <code>status-green</code> - Display a custom message in green.   - Used by scripts to indicate the success of an action, like \"Installed FreeCAD successfully\", \"Update complete\", and \"All packages have been purged successfully.\"   - This function outputs to <code>stderr</code>. - <code>generate_logo</code> - Displays the Pi-Apps logo in a terminal. - <code>add_english</code> - Ensures an English locale is installed so that log-diagnosing tools can function properly.   - This was added in PR #1031</p> <p>Apt/dpkg/package functions below.</p> <ul> <li><code>apt_lock_wait</code> - waits until apt locks are released.</li> <li><code>package_info</code> - List everything <code>dpkg</code> knows about the specified package.</li> <li>This retrieves a block of text from the <code>/var/lib/dpkg/status</code> file.</li> <li><code>package_installed</code> - determine if the specified package is installed.</li> <li>Returns an exit code of <code>0</code> if the package is installed, otherwise it returns <code>1</code>.</li> <li><code>package_available</code> - determine if the specified package is able to be installed with <code>apt</code>.</li> <li>This uses <code>grep</code> to search the <code>/var/lib/apt/lists/</code> folder.</li> <li>Returns an exit code of <code>0</code> if the package was found, otherwise it returns <code>1</code>.</li> <li><code>package_dependencies</code> - List the dependencies of a package</li> <li>This simply isolates a line from the output of the <code>package_info</code> function.</li> <li>This is much faster than doing an <code>apt-cache search</code>.</li> <li><code>less_apt</code> - Reduce the output of an <code>apt</code> operation.</li> <li>Example usage:   <code>bash   sudo apt update 2&gt;&amp;1 | less_apt</code></li> <li><code>apt_update</code> - A wrapper function to run <code>sudo apt update</code>.</li> <li>This will wait for apt locks to be released, handle status information, and display helpful tips if packages are upgradable or autoremovable.</li> <li>Arguments to the function will be passed on to the <code>apt</code> command.</li> </ul> <p>Below are three functions that manage the Pi-Apps local APT repository. This is a special folder (<code>/tmp/pi-apps-local-packages</code>) used by the <code>install_packages</code> function to handle installing local deb files. Installing local packages from a repository improves dependency-handling, condenses the operation into one <code>apt</code> operation, and allows the packages to be specified in any order.  </p> <ul> <li><code>repo_add</code> - Add the specified deb file(s) to the local repository.</li> <li>This simply copies specified files to the <code>/tmp/pi-apps-local-packages</code> folder.</li> <li><code>repo_referesh</code> - Index the local repository, create a <code>Packages</code> file, and a <code>source.list</code>.</li> <li>At this point, you can make <code>apt</code> use the repository by passing this flag to it: <code>-o Dir::Etc::SourceList=/tmp/pi-apps-local-packages/source.list</code></li> <li><code>repo_rm</code> - Removes the local repository.</li> <li><code>app_to_pkgname</code> - Convert an app-name to an <code>apt</code>-compatible package name.</li> <li>This function generates the name to use for creating dummy apt packages. The naming scheme is: <code>pi-apps-XXXXXXXX</code> (each <code>X</code> can be any lowercase letter or number)</li> <li>View which dummy packages are installed now by running <code>apt search pi-apps-</code> in a terminal.</li> <li><code>install_packages</code> - Used by apps to install packages.</li> <li>This function is replacing the <code>pkg-install</code> script.</li> <li>Example usage: <code>install_packages package1 /path/to/package2.deb https://example.com/package3.deb package4-* || exit 1</code></li> <li>First, each argument is analyzed.<ul> <li>If it's a URL, the file is downloaded and added to the local repository.</li> <li>If it's a deb-file, it's added to the local repository.</li> <li>If it contains regex (regular expression, aka the <code>*</code> character), a list of packages is generated using the <code>apt-cache search</code> command.</li> </ul> </li> <li>Next, the local repository is initialized. (if necessary)</li> <li>Now an <code>apt_update</code> takes place.</li> <li>It's time to configure and install an empty apt-package that \"depends on\" the packages we want to install. We refer to it as a \"dummy deb\".<ul> <li>First the name of the dummy deb is determined, using the <code>app_to_pkgname</code> function.</li> <li>If the dummy deb is already installed, <code>install_packages</code> will inherit its dependencies and then purge the dummy deb. This means that the <code>install-packages</code> function can be used multiple timesin an app's script because it's accumulative.</li> <li>The dummy deb is created, packaged, and finally installed.</li> </ul> </li> <li><code>purge-packages</code> - Used by apps to remove packages that they previously installed.</li> <li>This function accepts no arguments. It reads the <code>$app</code> variable, purges its associated dummy deb, and autoremoves any packages that are no longer necessary.</li> <li><code>get_icon_from_package</code> - Given a package (or space-separated list of packages), this function will automatically find the program icon for it.</li> <li>This is useful for the <code>createapp</code> script to automatically find a suitable icon for package-apps you're trying to add.</li> <li>This uses <code>dpkg-query</code> to list all files each package installed. The list is filteres to only show <code>.png</code> files in <code>/icons/</code> or <code>/pixmaps/</code> folders.</li> <li>The list is sorted by filesize to find the picture with the most pixels.</li> </ul> <p>End of apt functions. App functions below.</p> <ul> <li><code>list_apps</code> - List all apps that match a given criteria. (In a newline-separated format)</li> <li><code>list_apps local</code> will list apps that exist locally.</li> <li><code>list_apps</code> is the same as <code>list_apps local</code>.</li> <li><code>list_apps app</code> will list all apps, both local and online.</li> <li><code>list_apps installed</code> will list apps that are currently installed.</li> <li><code>list_apps corrupted</code> will list apps that are currently corrupted.</li> <li><code>list_apps disabled</code> will list apps that are currently disabled.</li> <li><code>list_apps uninstalled</code> will list apps that are currently uninstalled.</li> <li><code>list_apps have_status</code> will list apps that currently have a known status. (A clean Pi-Apps installation won't have any status files)</li> <li><code>list_apps missing_status</code> will list apps that don't have status files.</li> <li><code>list_apps cpu_installable</code> will list apps that have an installation script compatible with your operating system's CPU architecture.<ul> <li>If \"app1\" only has an <code>install-64</code> script but your system is 32-bit, then \"app1\" will be excluded from this list.</li> <li>Likewise, if \"app1\" only has an <code>install-32</code> script but your system is 64-bit, then \"app1\" will be excluded from this list.</li> </ul> </li> <li><code>list_apps package</code> will list apps that don't have scripts but have a <code>packages</code> file.</li> <li><code>list_apps standard</code> will list apps that do have scripts and don't have a <code>packages</code> file.</li> <li><code>list_apps hidden</code> will list apps that are in the special \"hidden\" category.</li> <li><code>list_apps visible</code> will list apps that are not in the special \"hidden\" category.</li> <li><code>list_apps online</code> will list apps that exist in the <code>update/pi-apps/apps</code> folder.</li> <li><code>list_apps online_only</code> will list apps that are only in the <code>update/pi-apps/apps</code> folder.</li> <li><code>list_apps local_only</code> will list apps that are not in the <code>update/pi-apps/apps</code> folder.</li> <li><code>list_intersect</code> - Takes two lists of apps and intersects them, meaning that only apps that are listed in both lists are returned.   For example, this will show apps that are both cpu_installable and visible:   <code>list_apps cpu_installable | list_intersect \"$(list_apps visible)\"</code></li> <li><code>list_subtract</code> - Takes two lists of apps and subtracts one from other, meaning that only apps listed in the first list and not in the second list, are returned.   For example, this will show apps that are not compatible with your system's architecture:   <code>list_apps local | list_subtract \"$(list_apps cpu_installable)\"</code></li> <li><code>read_category_files</code> - Generates a list of categories; data compiled from the <code>data/category-overrides</code> and <code>etc/categories</code> files, with added support for unlisted apps.</li> <li> <p><code>app_categories</code> - Format the categories file, then list all apps, as if they were inside folders, based on the categories file. Also lists all apps under special \"Installed\" and \"All Apps\" categories.</p> </li> <li> <p><code>bitly_link</code> - Increase/decrease the \"number of users\" a certain app has.</p> </li> <li>Botspot creates bitly links for every app: one link for installing it, and one link for uninstalling it.</li> <li>Bitly will track how many times each link has been clicked.</li> <li>Assuming the \"Enable Analytics\" setting was not turned off, this function will \"click\" one of those links.</li> <li>Botspot uses a script to upload bitly's statistics to the pi-apps-analytics repository.</li> <li><code>usercount</code> - returns the number of users an app has, based on the current number in the pi-apps-analytics repository.   To display the number of users for the Arduino app:   <code>usercount Arduino</code></li> <li><code>script_name</code> - returns name of install script(s) for the specified app. Possible outputs: '', 'install', 'install-32', 'install-64', 'install-32 install-64'   Usage:   <code>script_name Arduino</code></li> <li><code>script_name_cpu</code> - Given an app, this returns the name of the app's installation script that would be run if you ran it.</li> <li>For example, if your operating system is 32-bit and the app has an <code>install-32</code> script, this function would return \"install-32\".</li> <li>If your operating system is 64-bit and the app has an <code>install-64</code> script, this function would return \"install-64\".</li> <li>If the app has an <code>install</code> script, this function would return \"install\".</li> <li>If none of the above, don't return anything.</li> <li><code>app_status</code> - return the given app's current status.</li> <li>If the app's status file does not exist, this function returns 'uninstalled'.</li> <li>Otherwise, this function returns the contents of the app's status file.</li> <li><code>app_type</code> - Determine if an app is a <code>standard</code> app or if it's a <code>package</code>.</li> <li><code>will_reinstall</code> - Return an exit code of <code>0</code> if the specified app would be reinstalled during an update, otherwise return an exit code of <code>1</code>.</li> <li>If the app's existing installation script is not identical to the new version of the installation script, AND the app is currently installed, exit with a code of <code>0</code>, otherwise exit <code>1</code>.</li> <li><code>app_search</code> - Search all apps for the specified search query.</li> <li>In each app-folder, this will search for matches in the following files:<ul> <li><code>description</code></li> <li><code>credits</code></li> <li><code>website</code></li> </ul> </li> <li>It hides incompatible and invisible apps before displaying the results. (list of app names, one per line)</li> <li><code>app_search_gui</code> - A graphical front-end for the <code>app_search</code> function.</li> <li>This displays all results from <code>app_search</code> in a graphical list.</li> <li>One app should be selected from the list before clicking OK.<ul> <li>If only one app is displayed in the list, no need to select it.</li> </ul> </li> <li>The chosen app (if any) is returned.</li> <li><code>generate_app_icons</code> - Resize a specified image and place the icons in the specified app-folder.</li> <li>This requires imagemagick to be installed. If it's missing, a dialog box will appear and ask permission to install it.</li> <li>Example usage: <code>generate_app_icons /path/to/my-image.png my-app</code></li> <li><code>refresh_pkgapp_status</code> - For the specified package-app, if dpkg thinks it's installed, then mark it as installed.</li> <li><code>refresh_all_pkgapp_status</code> - For every package-app, if dpkg thinks it's installed, then mark it as installed.</li> </ul> <p>Logfile functions below. - <code>get_logfile</code> - Find the most recent logfile for the specified app. - <code>log_diagnose</code> - Search a specified logfile for phrases that indicate non-errors.   - Many errors are not Pi-Apps's fault. Most are outside of Pi-Apps's control, but caused by user-interference, Internet problems, or apt configuration errors.   - Errors are categorized into three types: <code>system</code>, <code>internet</code>, <code>package</code>, and unknown.     - If a known phrase is identified, the <code>$error_type</code> variable is set to either <code>system</code> or <code>internet</code> or <code>package</code>.     - If no phrases were identified, the <code>$error_type</code> variable will be set to <code>unknown</code>. Only when the error_type is \"unknown\" will Pi-Apps allow the user to send an error report.   - Each detected error has an accompanying caption for the user to read. This caption explains what the problem is and how to fix it.     - As multiple error messages might be identified, the error captions are stored in an array variable called <code>$error_caption</code>. Storing explanations in an array allows multiple explanations to be displayed to the user.   - Before exiting, this function returns the collected information. The first line is the value of <code>$error_type</code>, while subsequent lines are the value(s) of <code>$error_caption</code>. - <code>format_logfile</code> - Log files store the entire output of all apps being installed or uninstalled. This function formats the logfile to improve its readability.   - Unwanted patterns are removed, like terminal color-codes, long arrays of periods, etc.   - All instances of the <code>\\r</code> character are replaced by the <code>\\n</code> character.   - A header is added to the file, containing the output from <code>get_device_info</code>. - <code>send_error_report</code> - Sends a log file to the Pi-Apps developers. - <code>send_error_report_gui</code> - A graphical front-end for <code>send_error_report</code> - asks the user permission before sending an error log.   - Please note that this is currently not being used. The <code>manage</code> script has its own error-reporting gui and directly uses <code>send_error_report</code>.</p> <p>Below are all functions that don't have anything to do with apps. - <code>runonce</code> - this function runs code only once, ever. Used by other scripts to run one-time workarounds to ensure a smooth transition as Pi-Apps evolves.   - For example, this is a real usage of <code>runonce</code> in the Pi-Apps <code>gui</code> script:     <code>bash     #ensure curl is installed     runonce &lt;&lt;\"EOF\"       if ! command -v curl &gt;/dev/null ;then         sudo apt install -y curl       fi     EOF</code>     It installs <code>curl</code> on the system, but only tries once.   - This works by hashing the entire command first, using <code>sha256sum</code>.   - If the hash matches a line in the <code>data/runonce_hashes</code> file, nothing occurs. Otherwise, the command is executed. - <code>text_editor</code> - Use a text editor to open a file.   - This obeys your choice of \"Preferred text editor\".   Usage:   <code>text_editor /path/to/your.file</code> - <code>view_file</code> - Display a maximized <code>yad</code> window to view a file. This is used to view logfiles. - <code>is_supported_system</code> - determines if your operating system is supported. This returns an exit-code of <code>0</code> if supported, otherwise<code>1</code>.   If any of the below criteria are true, then your system is unsupported:   - The kernel matches \"x86\" or \"i686 or \"i386\".   - The <code>/proc/version</code> file matches \"Android\".   - The operating system's <code>PRETTY_NAME</code> matches \"stretch\", \"wheezy\", \"jessie\", \"manjaro\" or \"Ubuntu 16\".   - The kernel matches \"armv6*\".   - The script is being run as <code>root</code>.   - The system has less than 500MB of free space. - <code>get_device_info</code> - summarizes the current system setup for debug use.   - To view the output on your  system, run this command:   <code>~/pi-apps/api get_device_info</code>   - This function is used in the <code>format_log_file</code> function. - <code>functions_to_files</code> - Takes every function in the <code>api</code> and turns them into their own miniature bash scripts.   - This exists purely for developer-convenience. It allows you to handle functions as if they were files.   - It creates a folder (<code>~/pi-apps/function-files</code>) and then places files in it. - <code>files_to_functions</code> - Takes every file in the <code>function-files</code> folder and re-combines them.   - The resulting output is printed to the terminal.</p> <p>Command interceptors below: - <code>git_clone</code> - Wrapper function for the <code>git clone</code> command with improvements:   - Status information is displayed. (\"Downloading XXXXXX repository...\")   - <code>git</code>'s output is suppressed. But if the operation fails, its full output will be displayed in the error message.   - Before cloning the repo, the destination folder is removed. This prevents the common error \"<code>Fatal: destination path 'XXXXXX' already exists and is not an empty directory.</code>\".   - There may be times when an app-script doesn't want the output suppressed, or status information, or the folder removed first. That's why this function is an \"opt-in\" function; script-writers have to consciencely switch to <code>git_clone</code> if they want to. - <code>wget</code> - This function overrides the <code>wget</code> command in all app-scripts. To speed up app-installation, it uses the <code>aria2c</code> tool when possible. Aria2c is faster and more reliable than wget, but it can't be used in all situations.   - To determine if <code>aria2c</code> can be used, this function parses all flags given to it. It stores the url and the output filename.     - If any flags other than <code>-q</code>, <code>-O</code>, and <code>-qO</code> are passed, <code>wget</code> is used.     - If the <code>aria2c</code> command does not exist, <code>wget</code> is used.     - If the output is not a file but is being sent to <code>stdout</code> (using the <code>-qO-</code> flag, for example), <code>wget</code> is used.   - If <code>aria2c</code> is enabled, it runs with the following flags:   <code>-c -x 16 -s 16 -m 10 --retry-wait 30 --console-log-level=error --show-console-readout=false --summary-interval=0 \"$url\" --dir '/' -o \"${file:1}\" --allow-overwrite</code>     - If the <code>-q</code> flag was passed, the <code>--quiet</code> flag is sent to aria2c.   - Otherwise, if aria2c was ruled out, <code>wget</code> is run as it normally would.   - This function is designed to operate seamlessly in 100% of cases. App-developers should not have to even know that this function is really translating <code>wget</code> commands to <code>aria2c</code> - it should operate exactly the same as <code>wget</code>, but faster. - <code>chmod</code> - Wrapper function for the <code>chmod</code> command with status information.   - This displays \"<code>Making executable: /path/to/file</code>\". - <code>unzip</code> - Wrapper function for the <code>unzip</code> command with status information.   - This displays \"<code>Extracting: /path/to/file</code>\".</p> <p>And with that, we come to the end of functions in the <code>api</code> script. If you see a function that's not listed here, please let us know.</p>"},{"location":"scripts/the-categoryedit-script/","title":"The categoryedit script","text":""},{"location":"scripts/the-categoryedit-script/#location","title":"Location:","text":"<p>On a default pi-apps installation, you will find this script at <code>/home/pi/pi-apps/etc/categoryedit</code>. This file is located in the <code>etc</code> folder because it's one of the smaller scripts.</p>"},{"location":"scripts/the-categoryedit-script/#purpose","title":"Purpose:","text":"<p>Manage Pi-Apps categories. As of commit https://github.com/Botspot/pi-apps/commit/ab1fcb5a114ab720df1712aaf151a9733e18a94c, there are two categories files: a local one and a global one. The global file is kept updated like any other file, while the local file is empty by default but can contain overrides. The global categories file: <code>/home/pi/pi-apps/etc/categories</code> The local categories file: <code>/home/pi/pi-apps/data/category-overrides</code> </p>"},{"location":"scripts/the-categoryedit-script/#usage","title":"Usage:","text":"<p>Run the category editor:</p> <pre><code>~/pi-apps/etc/categoryedit\n</code></pre> <p>Move the Arduino app to the Internet category:</p> <pre><code>~/pi-apps/etc/categoryedit Arduino Internet\n</code></pre> <p>Move the Arduino app to the top level (no category):</p> <pre><code>~/pi-apps/etc/categoryedit Arduino\n</code></pre>"},{"location":"scripts/the-createapp-script/","title":"The createapp script","text":""},{"location":"scripts/the-createapp-script/#location","title":"Location:","text":"<p>On a default pi-apps installation, you will find this script at <code>/home/pi/pi-apps/createapp</code>. </p>"},{"location":"scripts/the-createapp-script/#purpose","title":"Purpose:","text":"<p>A GUI to help you create/edit an app. </p>"},{"location":"scripts/the-createapp-script/#usage","title":"Usage:","text":"<p>To create a new app:</p> <pre><code>~/pi-apps/createapp\n</code></pre> <p>To edit an existing app:</p> <pre><code>~/pi-apps/createapp Arduino\n</code></pre>"},{"location":"scripts/the-createapp-script/#how-it-works","title":"How it works:","text":"<p>This script is one long <code>while</code> loop with a <code>case</code> statement for each step. (similar to the <code>gui</code> script) Each dialog allows you to go forward or backward and the current step is stored in the <code>$step</code> variable. That's about it. View the script to see how each step works.</p>"},{"location":"scripts/the-gui-script/","title":"The gui script","text":""},{"location":"scripts/the-gui-script/#location","title":"Location:","text":"<p>On a default pi-apps installation, you will find this script at <code>/home/pi/pi-apps/gui</code>. </p>"},{"location":"scripts/the-gui-script/#purpose","title":"Purpose:","text":"<p>This script handles Pi-Apps's entire user-interface.</p>"},{"location":"scripts/the-gui-script/#usage","title":"Usage:","text":"<p>To run Pi-Apps: </p> <pre><code>~/pi-apps/gui\n</code></pre> <p>To start Pi-Apps at a specific app:</p> <pre><code>~/pi-apps/gui Arduino\n</code></pre> <p>To start Pi-Apps on a specific category:</p> <pre><code>~/pi-apps/gui 'All Apps/'\n</code></pre>"},{"location":"scripts/the-gui-script/#how-it-works","title":"How it works:","text":"<ol> <li>The splash screen appears.</li> <li>The <code>api</code> script is sourced.</li> <li>The pi-apps logo is displayed in the terminal (using the <code>generate_logo</code> function)</li> <li>A series of <code>runonce</code> entries are executed in the background.</li> <li>The message of the day is determined.<ul> <li>To save time, it's stored in <code>data/announcements</code>.</li> <li>If that file is missing or it's more than a day old, it is downloaded from the pi-apps-announcements repository.</li> <li>One random line is taken from the file and used as the message for this session.</li> </ul> </li> <li>We now come to a <code>while</code> loop that runs the GUI. Inside is an <code>if</code> statement that obeys the following values of the <code>$action</code> variable:<ul> <li><code>main-window</code> - Handles the app list.</li> <li>This may be a yad window or an xlunch window, depending on the \"App List Style\" setting.</li> <li>Xlunch is compiled, if necessary.</li> <li><code>details</code> - Displays the details of the current app.</li> <li><code>search</code> - Sets the <code>$app</code> variable to the output of the <code>app_search_gui</code> function.</li> <li>The rest of the modes need no explanation. They are: <code>exit</code>, <code>back</code>, <code>install</code>, <code>uninstall</code>, <code>scripts</code>, <code>edit</code>, <code>credits</code>, <code>enable</code>, <code>viewlog</code>, <code>mind-reading</code>, <code>view-updates</code>, <code>unknown</code>.</li> </ul> </li> </ol>"},{"location":"scripts/the-logviewer-script/","title":"The logviewer script","text":""},{"location":"scripts/the-logviewer-script/#location","title":"Location:","text":"<p>On a default pi-apps installation, you will find this script at <code>/home/pi/pi-apps/etc/logviewer</code>. This file is located in the <code>etc</code> folder because it's one of the smaller scripts.</p>"},{"location":"scripts/the-logviewer-script/#purpose","title":"Purpose:","text":"<p>Browse the list of log files, opening any files that you click on with the <code>viewlog</code> script.</p>"},{"location":"scripts/the-logviewer-script/#usage","title":"Usage:","text":"<pre><code>~/pi-apps/etc/logviewer\n</code></pre>"},{"location":"scripts/the-manage-script/","title":"The manage script","text":""},{"location":"scripts/the-manage-script/#location","title":"Location:","text":"<p>On a default pi-apps installation, you will find this script at <code>/home/pi/pi-apps/manage</code>. </p>"},{"location":"scripts/the-manage-script/#purpose","title":"Purpose:","text":"<p>The <code>manage</code> script will install apps, uninstall apps, and update apps. It can be compared to the <code>apt</code> tool on Debian Linux.</p>"},{"location":"scripts/the-manage-script/#usage","title":"Usage:","text":"<p>The manage script won't do much if you run it standalone:</p> <pre><code>$ ~/pi-apps/manage\nYou need to specify an operation, and in most cases, which app to operate on.\n</code></pre> <p>You need to tell the <code>manage</code> script to do something.</p> <pre><code>$ ~/pi-apps/manage install Arduino\n</code></pre> <p>Now we're getting somewhere! You just installed the Arduino app. The <code>manage</code> script supports these modes: - <code>install</code>: installs the specified app.   Several things occur before the app's installation script is run:   - The specified app must exist.   - The app must not be disabled. If it is, the <code>manage</code> script exits with an exit-code of zero.   - If your system is unsupported (determined by the <code>is_supported_system</code> function in the api script), a warning will appear, along with a 10-second wait-time.   - The app's installation script is determined. Depending on the app and on your system's CPU architecture, the script-name may be \"<code>install</code>\", \"<code>install-32</code>\", or \"<code>install-64</code>\".   - Determine a unique filename for the log-file to be generated. (This file will store the entire output of the installation process.)   - Finally, the app's installation script is executed.     - It is executed with the <code>nice</code> command, to lower the priority of the process so that the rest of the system remains responsive, even while compiling.     - Its output is redirected to the log-file, and to stdout. (usually the terminal)   - If the app's installation script succeeded (if it exited with a return code of <code>0</code>):     - The the log-file is renamed to <code>install-success-$app</code>     - The <code>manage</code> script exits with a return code of <code>0</code>.   - However, if the app's installation script failed (any return code except <code>0</code>):     - The the log-file will be renamed to <code>install-fail-$app</code>.     - The <code>manage</code> script exits with a return code of <code>1</code>. - <code>uninstall</code>: exactly like the <code>install</code> mode except that it uninstalls the specified app.   - These two modes are so similar that they share the same code! - <code>install-if-not-installed</code>: Installs the specified app, only if it has not already been installed.   - This mode is especially useful for apps that need another app to be installed first.   For example, the <code>Wine (x86)</code> app requires Box86. It accomplishes that with this comand:   <code>bash   \"${DIRECTORY}/manage\" install-if-not-installed Box86 || error \"Box86 failed to install somehow!\"</code> - <code>multi-install</code>: installs multiple apps, one at a time. How to specify multiple apps? By using a multi-line argument, like this:   <code>bash   $ ~/pi-apps/manage multi-install \"Arduino   BalenaEtcher   CloudBuddy   Downgrade Chromium\"</code>   Note about <code>multi-install</code>: This mode includes    elements.   - Before installing anything, <code>manage</code> will check if any apps are already installed. If so, a <code>yad</code> dialog will appear and ask if you really want to install that app again.       - If you choose \"No\", the app is removed from the list of apps to install.   - Then, each app will be installed, one at a time.       - It does this by running the manage script in the <code>install</code> mode, once for each app   - If any apps fail to install, a <code>yad</code> dialog will appear and ask permission to send the error log to Pi-Apps developers. - <code>multi-uninstall</code>: exactly like <code>multi-install</code> except that it uninstalls the list of apps.   - These two modes are so similar that they share the same code! - <code>check-all</code>: This mode is the Pi-Apps equivalent to an <code>apt update</code>. It lists updatable apps.   - It downloads the latest pi-apps repository to the <code>update/pi-apps</code> folder. (using <code>git clone</code> or <code>git pull</code>, as appropriate) Now, there are two versions of Pi-Apps on the local filesystem: the \"local version\" and the \"latest version\".   - Each app-folder is compared.       - If the app-folder only exists in the local version, then no action is taken.       - If the app-folder only exists in the online version, then it must be a new app and is added to the list of updatable apps.       - If the app-folder exists in both locations and the contents do match, then no action is taken.       - If the app-folder exists in both locations but the contents don't match, the online version must have received an update. As a result, the app is added to the list of updatable apps.   - Finally, the list of updatable apps (one app per line) is written to standard output and the script exits. - <code>update</code>: This mode will update a single app. (like an <code>apt upgrade</code>)   It copies the new version from the update folder to the main folder, reinstalling if necessary.   - First, the app may need to be installed, or it may not:       - If the app is currently installed, and its current installation script does not match the online version, then the app is uninstalled.   - Then the current (old) app-folder is sent to the system's Trash folder.       - This is a failsafe: just in case you made changes to the app-folder, you have an option to restore those changes. (as opposed to permanent deletion)   - The app-folder is copied from the <code>update/pi-apps/apps</code> folder to the main <code>apps</code> folder.   - If the app was uninstalled earlier, it will now be installed back. - <code>update-all</code>: This mode will check for app-updates and install them without any user-interaction.   The <code>manage</code> script will run itself in the <code>check-all</code> mode, then, for every app that <code>check-all</code> mentioned, it will <code>update</code> each app.</p>"},{"location":"scripts/the-pkg-install-script/","title":"The pkg install script","text":""},{"location":"scripts/the-pkg-install-script/#location","title":"Location:","text":"<p>On a default pi-apps installation, you will find this script at <code>/home/pi/pi-apps/pkg-install</code>. </p>"},{"location":"scripts/the-pkg-install-script/#purpose","title":"Purpose:","text":"<p>Some background information first: - Goal: Pi-Apps is designed for people who install an app, try it out, then later uninstall it. You should not have to think twice before installing an app. Users should have confidence that uninstalling the app will undo all changes and restore all disk-space. - Problem: Many apps need to install apt packages in order to work. On the surface, this does not seem like a big problem at all: if \"app1\" installs \"package1\", \"package2\", and \"package3\", then those packages should be purged while uninstalling \"app1\". What's the problem with that? Dependencies. What if some other utility requires \"package1\" to function? Now that you uninstalled \"app1\", \"package1\" just got uninstalled.   - Best-case scenario: that utility will not work anymore.   - Worst-case scenario: you just broke an essential part of your system and it will fail to boot. - Solution: When uninstalling an app, only remove packages that are not required by anything else. To accomplish this, we can't just install packages the normal way with <code>sudo apt install</code>. Instead, we need to generate a dummy deb - a custom apt package that lists \"package1\", \"package2\", and \"package3\" as dependencies. Later, when the app is being uninstalled, the dummy deb is removed and a simple <code>apt autoremove</code> is enough to safely remove the packages.</p>"},{"location":"scripts/the-pkg-install-script/#usage","title":"Usage:","text":"<p>In an app's <code>install</code> script, there may be a line like this to install \"package1\", \"package2\", and \"package3\":</p> <pre><code>DIRECTORY=$HOME/pi-apps\n\"${DIRECTORY}/pkg-install\" 'package1 package2 package3' \"$(dirname \"$0\")\" || exit 1\n</code></pre> <p>This is equivalent to:</p> <pre><code>sudo apt update --allow-releaseinfo-change\nsudo apt install -yf --no-install-recommends --allow-downgrades package1 package2 package3\n</code></pre>"},{"location":"scripts/the-pkg-install-script/#how-it-works","title":"How it works:","text":"<ol> <li>First, <code>pkg-install</code> sets the language variables to <code>C</code>. This ensures that apt's output is parsed correctly, even if the system is using a different language,</li> <li><code>pkg-install</code> runs <code>sudo apt update</code>.</li> <li>The output of <code>sudo apt update</code> is parsed for various messages from <code>apt</code>.<ul> <li>If the output contains \"autoremove to remove them\", you will receive a message that some packages can be removed with <code>apt autoremove</code>.</li> <li>If the output contains \"packages can be upgraded\", you will receive a message that some packages can be upgraded.</li> <li>If the output contains \"W:\" or \"E:\" or \"Err:\", <code>pkg-install</code> will exit with an error saying that your apt system is messed up. The exact error message depends on apt's exact output - it is designed to help users navigate through apt errors and provides instructions for how to sign a repository, remove a broken repository, or check for an Internet connection.</li> </ul> </li> <li>If any filenames (paths to a local deb package) are specified, <code>pkg-install</code> will install each one, then mark it as autoremovable. (Using this command: <code>sudo apt-mark auto \"$packagename\"</code></li> <li>If any package names include regular expression, <code>pkg-install</code> expands the names with <code>apt-cache search</code>.</li> <li>Finally, the dummy deb is created. As mentioned earlier, this package will list the desired packages as dependencies.<ul> <li>The dummy deb for each app has to be named something unique. But this poses a problem because apps can have space characters while apt does not support space characters.</li> <li>This problem is resolved by naming each dummy-deb based on a hash of its name.</li> <li>The code used to do this is:    <code>bash    echo -n 'pi-apps-' ; echo \"$app\" | md5sum | cut -c1-8 | awk '{print $1}'</code></li> <li>Feel free to replace <code>\"$app\"</code> with an app-name of your choice to see what its package name would be.</li> </ul> </li> <li>If the dummy deb's name is already installed, purge it and then continue.</li> <li>Finally, the dummy deb is installed with <code>apt</code>. All packages mentioned in the \"<code>Depends:</code>\" field of the dummy deb are installed as a dependency of the dummy deb.</li> <li>If apt fails, its errors are diagnosed in the same way errors were diagnosed earlier when <code>sudo apt update</code> was run.</li> <li><code>pkg-install</code> exits with a code of <code>0</code> if everything was successful, otherwise it exits with a code of <code>1</code>.</li> </ol>"},{"location":"scripts/the-preload-daemon-script/","title":"The preload daemon script","text":""},{"location":"scripts/the-preload-daemon-script/#location","title":"Location:","text":"<p>On a default pi-apps installation, you will find this script at <code>/home/pi/pi-apps/etc/preload-daemon</code>. This file is located in the <code>etc</code> folder because it's one of the smaller scripts.</p>"},{"location":"scripts/the-preload-daemon-script/#purpose","title":"Purpose:","text":"<p>To generate the app-list for all categories.</p>"},{"location":"scripts/the-preload-daemon-script/#usage","title":"Usage:","text":"<p>Preload all categories for <code>yad</code>, repeating every 30 seconds for a total of 20 times:</p> <pre><code>~/pi-apps/etc/preload-daemon yad\n</code></pre> <p>Preload all categories for <code>xlunch</code> only once:</p> <pre><code>~/pi-apps/etc/preload-daemon xlunch once\n</code></pre>"},{"location":"scripts/the-preload-script/","title":"The preload script","text":""},{"location":"scripts/the-preload-script/#location","title":"Location:","text":"<p>On a default pi-apps installation, you will find this script at <code>/home/pi/pi-apps/preload</code>. </p>"},{"location":"scripts/the-preload-script/#purpose","title":"Purpose:","text":"<p>To generate the app-list for a given category, and prioritizing minimum execution-time.</p>"},{"location":"scripts/the-preload-script/#usage","title":"Usage:","text":"<p>To generate the app-list of the \"Installed\" category for yad:</p> <pre><code>~/pi-apps/preload yad 'Installed'\n</code></pre> <p>To generate the app-list for xlunch for the main page (no category)</p> <pre><code>~/pi-apps/preload /home/pi/pi-apps/preload xlunch ''\n</code></pre>"},{"location":"scripts/the-preload-script/#how-it-works","title":"How it works:","text":"<p>This script is designed for maximum speed. As a result, it uses many tricks to run faster. 1. Compile the <code>genapplist-yad</code> program. This is a C program designed to improve preloading times, but if it fails, a bash-based fallback is used.     - It uses <code>gcc</code> to compile the <code>/etc/genapplist-yad.c</code>file to the <code>/etc/genapplist-yad</code> binary.     - This program is tested; if it fails to produce 5 lines of output for one input app, the program is deleted to use the bash-based fallback. 2. Determine if it's necessary to generate the app-list.     - If nothing has been modified in the <code>apps</code> folder, the <code>settings</code> folder, the <code>update-status</code> folder, the <code>etc</code> folder, the <code>api</code> script, the <code>preload</code> script, and the <code>categories</code> file, skip generating the app-list, return the contents of the previous app-list in the <code>data/preload</code> folder, and exit. 3. If it is necessary to generate the app-list, use the <code>app_categories</code> function to generate a list of all apps in their respective categories. 4. Limit the list of apps to the current category. (so if we're viewing the \"Installed\" category, hide all apps that are not in there.) 5. If the \"Shuffle App list\" setting is enabled, shuffle the list of apps and categories now.     - Note: categories are always displayed above apps. 6. Remove apps that are not compatible with the operating system's CPU architecture. 7. Generate the list of visible categories. 8. Generate the list of visible apps.     - If the GUI-mode is yad, use the <code>genapplist-yad</code> program if it exists.     - Otherwise, generate the list of apps the slower bash-based way. 9. Save the resulting app-list to a file in the <code>data/preload</code> folder. (so that next time <code>preload</code> is run, it might not have to generate anything) 10. In the background, place all app-icons in the disk cache. This improves load-time. 11. Output the resulting app-list. 12. Run the <code>preload-daemon</code> script in the background to preload other categories. That way, when using Pi-Apps, by the time you click any category, it has just been preloaded and is ready-to-go.</p>"},{"location":"scripts/the-purge-installed-script/","title":"The purge installed script","text":""},{"location":"scripts/the-purge-installed-script/#location","title":"Location:","text":"<p>On a default pi-apps installation, you will find this script at <code>/home/pi/pi-apps/purge-installed</code>. </p>"},{"location":"scripts/the-purge-installed-script/#purpose","title":"Purpose:","text":"<p>This script is the opposite of <code>pkg-install</code>: it uninstalls the dummy deb, then runs <code>sudo apt autoremove</code>.</p>"},{"location":"scripts/the-purge-installed-script/#usage","title":"Usage:","text":"<p>In an app's <code>uninstall</code> script, there may be a line like this:</p> <pre><code>DIRECTORY=$HOME/pi-apps\n\"${DIRECTORY}/purge-installed\" \"$(dirname \"$0\")\" || exit 1\n</code></pre>"},{"location":"scripts/the-settings-script/","title":"The settings script","text":""},{"location":"scripts/the-settings-script/#location","title":"Location:","text":"<p>On a default pi-apps installation, you will find this script at <code>/home/pi/pi-apps/settings</code>. </p>"},{"location":"scripts/the-settings-script/#purpose","title":"Purpose:","text":"<p>To manage settings for Pi-Apps.</p>"},{"location":"scripts/the-settings-script/#usage","title":"Usage:","text":"<p>To launch the graphical settings window:</p> <pre><code>~/pi-apps/settings\n</code></pre> <p>To check for missing setting-values and fill them with the default values, use this flag:</p> <pre><code>~/pi-apps/settings refresh\n</code></pre> <p>To revert all settings to their default values:</p> <pre><code>~/pi-apps/settings revert\n</code></pre>"},{"location":"scripts/the-settings-script/#how-it-works","title":"How it works:","text":"<p>Each setting is stored in two places in the main pi-apps folder: - The setting's possible values, default value, and explanation is stored in the <code>etc/setting-params</code> folder.   - For example, the <code>etc/setting-params/App List Style</code> file contains:     <code>#Pi-Apps can display the apps as a compact list (yad), or as a group of larger icons. (xlunch)     yad     xlunch-dark     xlunch-dark-3d     xlunch-light-3d</code>   - All commented lines are the explanation, also known as the tooltip.     - For this file, it is:       <code>#Pi-Apps can display the apps as a compact list (yad), or as a group of larger icons. (xlunch)</code>   - The first uncommented line is the default value for the setting.     - For this file, it is:       <code>yad</code>   - Subsequent uncommented lines are additional possible values.     - For this file, they are:       <code>xlunch-dark       xlunch-dark-3d       xlunch-light-3d</code> - The setting's current value is stored in the <code>data/settings</code> folder. This is a single file that contains a single-line value.   - For example, if I set the app list style to \"xlunch-dark-3d\", the <code>data/settings/App List Style</code> file will contain \"<code>xlunch-dark-3d</code>\".</p> <p>This dual-file/dual-folder approach is necessary to retain your choice, while allowing there to be future updates to settings, and/or their possible values. (Remember, the <code>data</code> directory is never updated but the <code>etc</code> folder is.)</p>"},{"location":"scripts/the-terminal-run-script/","title":"The terminal run script","text":""},{"location":"scripts/the-terminal-run-script/#location","title":"Location:","text":"<p>On a default pi-apps installation, you will find this script at <code>/home/pi/pi-apps/etc/terminal-run</code>. This file is located in the <code>etc</code> folder because it's one of the smaller scripts.</p>"},{"location":"scripts/the-terminal-run-script/#purpose","title":"Purpose:","text":"<p>This script may be Botspot's greatest contribution to the open-source world. Apart from this script, there is no reliable way to: - Run a newline-separated list of commands in a new terminal window. - Set the terminal's title, as desired. - Keep the script running until the terminal has been closed. - Support a variety of terminals.</p>"},{"location":"scripts/the-terminal-run-script/#usage","title":"Usage:","text":"<p>This command will run two commands in a terminal and set the terminal's title to \"Upgrading your packages\":</p> <pre><code>~/pi-apps/etc/terminal-run 'sudo apt update\nsudo apt upgrade' \"Upgrading your packages\"\n</code></pre> <p>The <code>terminal-run</code> script will not exit until the terminal closes.</p>"},{"location":"scripts/the-terminal-run-script/#how-it-works","title":"How it works:","text":"<p>As mentioned earlier, this script supports running a list of commands in a terminal. That may sound easy enough, but it's not. - Terminals are not designed to support this. Most terminals can, with some clever tricks, but it varies on a case-by-case basis.</p> <p>As mentioned earlier, this script will keep running until the terminal has been closed. How is that possible? - Before running any commands in a terminal, a special file is created in the <code>/tmp</code> folder. This file is empty for now. - Then, the terminal is instructed to write its PID (process ID) to the file. - Now, while the terminal is running, the <code>terminal-run</code> script can regularly check if that PID process is still running.   - It does this by periodically checking if the <code>/proc/${PID}</code> folder exists. - When the PID stops, it indicates that the terminal has been closed. Now the <code>terminal-run</code> script exits.</p> <p>Supported terminals: - lxterminal - xfce4-terminal - mate-terminal - xterm - konsole - terminator - gnome-terminal - x-terminal-emulator</p> <p>Debug mode: if you set the <code>DEBUG</code> variable to <code>1</code>, <code>terminal-run</code> will output the name of the currently-used terminal. - This is useful for debugging, when no terminal appears and we want to know which terminal was being used.</p>"},{"location":"scripts/the-updater-script/","title":"The updater script","text":""},{"location":"scripts/the-updater-script/#location","title":"Location:","text":"<p>On a default pi-apps installation, you will find this script at <code>/home/pi/pi-apps/updater</code>. </p>"},{"location":"scripts/the-updater-script/#purpose","title":"Purpose:","text":"<p>This script handles Pi-Apps updates, both for apps and for files. Apps do not have version numbers, so updating involves comparing the installation-script of the existing app-folder with the installation-script of the new app-folder.</p>"},{"location":"scripts/the-updater-script/#usage","title":"Usage:","text":"<pre><code>~/pi-apps/updater gui\n</code></pre> <p>This will check for updatable apps and files, then will display them in a graphical list, (using <code>yad</code> of course), and will give you the option to update certain items and not others. But that's not all you can do with this script. The <code>updater</code> script supports multiple modes, useful for a variety of situations: - <code>gui</code> - Check for updates and list them graphically.   - This is the default mode if you did not specify one.   - If you choose to update anything, a terminal will appear to update apps. - <code>gui-yes</code> - Exactly the same as the <code>gui</code> mode, except that the updates are automatically applied in a terminal. - <code>autostarted</code> or <code>onboot</code> - This mode is intended to be run on boot.   - First, determine if the update-interval setting allows an update-check today.     - If not, the script exits.   - Then, make sure that at least one app has been installed.     - This is accomplished by checking if there are any files in the <code>data/status</code> folder.     A fresh installation of Pi-Apps will not have any files in that folder, because no apps have been installed yet.     - If there are no files in that folder, the script will exit.   - After that, assuming there are updates available, display a notification in the lower-right corner of the screen.     - This notification is designed to not interfere with typing.   - If you click Details, you will see the graphical list of updates, just like with the <code>gui</code> mode.   - Once updates are complete, another notification will appear to say \"Pi-Apps updates complete.\" - <code>cli</code> - This mode is intended to be run in a terminal. It checks for updates, lists the updates, and prompts for a Y/N answer. - <code>cli-yes</code> - Check for updates, then automatically apply them all. - <code>set-status</code> - Check for updates and then exit.   - The list of updatable apps is written to <code>\"${DIRECTORY}/data/update-status/updatable-apps\"</code>, with the DIRECTORY variable being the location of your Pi-Apps folder. (default: <code>/home/pi/pi-apps</code>)   - The list of updatable files is written to <code>\"${DIRECTORY}/data/update-status/updatable-files\"</code>.   - The script will exit with code <code>0</code> if updates are available, otherwise <code>1</code>. - <code>get-status</code> - Check if an update was available the last time <code>set-status</code> was run.   - This is based on the length of the <code>updatable-files</code> and <code>updatable-apps</code> files.   - Doing it this way allows for an instant update-check - necessary for a gui to run quickly. Nobody wants to wait for an update-check to finish before Pi-Apps will launch.   - The script will exit with code <code>0</code> if updates are available, otherwise <code>1</code>.</p> <p>Updater also supports a fast mode. This is necessary for the Pi-Apps GUI, where you don't want to wait a few seconds after clicking the \"Updates\" category. Using the fast mode will rely on the previous update-check. It won't check for updates, it will simply display them. To use the fast mode:</p> <pre><code>~/pi-apps/updater gui fast\n</code></pre>"},{"location":"scripts/the-viewlog-script/","title":"The viewlog script","text":""},{"location":"scripts/the-viewlog-script/#location","title":"Location:","text":"<p>On a default pi-apps installation, you will find this script at <code>/home/pi/pi-apps/etc/viewlog</code>. This file is located in the <code>etc</code> folder because it's one of the smaller scripts.</p>"},{"location":"scripts/the-viewlog-script/#purpose","title":"Purpose:","text":"<p>View the specified log file in a text editor.</p>"},{"location":"scripts/the-viewlog-script/#usage","title":"Usage:","text":"<pre><code>~/pi-apps/etc/viewlog ~/pi-apps/logs/install-success-Arduino.log\n</code></pre> <p>Notes: - This script will kill previous instances of itself. - This script does not obey the \"Preferred text editor\" setting.   - Why? Viewing a log in <code>geany</code> (the default \"Preferred text editor\" setting) is cumbersome and breaks the whole concept of closing the editor once you click on a new logfile.</p>"}]}